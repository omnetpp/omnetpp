2025-04-15  Levente Meszaros

	* Fixed eventlog recording enabling/disabling flags: Settings in the
	`eventlog-options` configuration option did not take place.

2025-05-07  Andras Varga

	* Fix #1369 "Inifile iteration variable does not accept underscore"

2025-03-20  Andras Varga

	* fsutils.cc: Added getLoadedExtensionLibraries(), which returns the list of
	shared libraries loaded by the simulation program.

2025-03-05  Rudolf Hornig

	* Updated the default value of the `debugger-attach-command` config option
	to use the new LSP4E DAP debugger in the IDE.

2024-11-22  Andras Varga

	* Print fewer newlines before error messages.

	Note: We output a line feed to ensure the error message begins on the start
	of the line; however we only need this for stdout, but not on stderr where
	we don't output much.

2024-11-22  Andras Varga

	* Added `-S` option that suppresses all stdout output ("really silent").

	Note: The existing `-s` was actually a "--no-verbose" option, it is also
	clarified now in the help.

2024-11-20  Andras Varga

	* Added `record-vector-results`, `record-scalar-results` options. They disable
	writing a scalar/vector file.

	Note: previously it was not possible, because even after disabling the
	recording of scalar/statistic/vector items using per-object options,
	empty files (just with the run header and vector declarations) were still
	created.

2024-10-08  ------ omnetpp-6.1.0 released ------

2024-09-27  Attila Torok

	* EnvirBase: fix: Make the MPI implementation of parsim actually get built
	in when available and requested, by adding missing inclusions of
	platdep/config.h before any WITH_MPI (or WITH_PARSIM) macro usages.

2024-09-27  Andras Varga

	* Accept wildcards in config names, e.g. `seed-*-mt`. In
	SectionBasedConfiguration, instead of storing config entries in a plain map,
	use a matcher list and first-match lookup.

	Also, for numeric ranges (e.g. `seed-{0..5}-mt` ) to work, dots between
	braces/brackets need to be ignored when looking for the last dot to separate
	path and suffix part.

2024-09-27  Andras Varga

	* EvnvirBase: fix: make `*.host[*].rng-0 = index` work in omnetpp.ini.
	`index` was not recognized ("no such variable")
-

2024-09-10  Andras Varga

	* EnvirBase: follow cEnvir change: added getOutputStream().

2024-05-27  Andras Varga

	* Inifile parsing: Fix trailing space in section header causing parse
	error. This fixes #1167.

2024-05-02  Andras Varga

	* Added isAbstractConfig() to cConfigurationEx; implement it
	in SectionBasedConfig.

2022-02-02  Andras Varga

	* Added the "abstract=<boolean>" config option. Setting it makes the section
	abstract, i.e. serve as a base for other sections.

2024-05-02  Andras Varga

	* Refined the description of eventlog-snapshot-frequency and
	eventlog-options ini file options for clarity.

2024-03-26  Levente Meszaros

	* Eventlog Recording: Fix: ComponentMethodBeginEntry was not recorded into
	the event log if the called was a channel object. The resulting eventlog
	file could not be read by the sequence chart tool.

2024-03-11  Andras Varga

	* Output Vector Recording: Include empty vectors in the output vector file.

	File Previously, output vectors were only recorded into the .vec file when
	the first data item was written. As a result, vectors that were registered
	but never written to did not appear in the .vec file. This behavior caused
	uncertainty during simulation result analysis, as users could not
	distinguish between events (e.g., packet drops) that never occurred during
	the simulation and those that were simply not measured or recorded. Now,
	empty vectors are also written to the .vec file, eliminating this
	uncertainty and providing more complete information.

	The old behavior can be requested with the "vector-record-empty=false"
	configuration option, in case it is ever needed.

	This also fixes the issue that no .vec file was written by a simulation that
	only created empty vectors but never wrote data into them.

2024-03-07  Andras Varga

	* Output Vector Recording: Follow cEnvir interface change, and remove the
	setVectorAttribute() method. Attributes need to be specified in the
	registerOutputVector() call instead.

	Reason: Otherwise, early vector registration (required for being able to
	record empty vectors into the .vec file) is not possible, because setVectorAttribute()
	calls would come too late. Also, this is now consistent with the API for recording of
	scalars, histograms, etc.

2024-01-17  Andras Varga

	* Fingerprint: "statistics" ingredient to ignore disabled (unrecorded)
	statistics. This, in theory, is a breaking change, but we doubt using the
	"statistics" fingerprint ingredient is a rarely used feature.

2023-10-18  Levente Mészáros

	* Fixed check_and_cast in ObjectPrinterRecursionControl, the result
	can be a nullptr.

2023-01-16  Andras Varga

	* XMLDocCache: Make it own the XML documents it loads. This is needed for
	making it possible to assign XML data to NED "object" parameters, see
	simulation library changes. Also: XmlDocCache may now be cleared at any
	time, because module parameters no longer point into the element trees held
	by XmlDocCache, but have their own copies.

2022-03-19  Andras Varga

	* EnvirBase: Refactoring: Factor out a loadNEDFiles() function from setup().

2022-05-16  Attila Torok

	* Use C++ headers instead of C ones, e.g. <cstdlib> instead of <stdlib.h>

2022-05-19  Attila Torok

	* Build: Generate config.h instead of passing macros on the command line

2024-02-01  ------ omnetpp-6.0.3 released ------

2023-10-06  ------ omnetpp-6.0.2 released ------

2022-05-18  Attila Torok

	build: Disable implicit make rules by setting .SUFFIXES to empty

2022-07-27  Andras Varga

	* EventlogFileManager: state vars commented for clarity

	* Fix #933: EventlogFileManager: eventlog recording intervals were ignored
	even in Cmdenv

	* EventlogFileManager: remove unused ("write-only") state variables

2022-05-18  Attila Torok

	* build: Disable implicit make rules by setting .SUFFIXES to empty

2022-09-01  ------ omnetpp-6.0.1 released ------

2022-04-11  ------ omnetpp-6.0 released ------

2022-04-08  Rudolf Hornig

	* Fixed default debugger command on Windows. The system() call uses cmd.exe
	on Windows, so we have to use 'bash -c' to start opp_ide's shell script.

2022-04-06  Andras Varga

	* EventLogFileManager: eliminate (harmless but still) illegal casts found
	by UndefinedBehaviorSanitizer.

2022-03-22  Levente Meszaros

	* opp_loadlibrary(): use LIBSUFFIX instead of hardcoding "_dbg"

2022-04-05  Andras Varga

	* SectionBasedConfiguration: fix invalid cast of NullEntry to
	MatchableEntry, found by UndefinedBehaviorSanitizer.

2022-01-05  Rudolf Hornig

	* Changed the default debugger command to one that invokes the Simulation
	IDE and makes the CDT debugger attach to the simulation process. The command
	line is: `opp_ide omnetpp://cdt/debugger/attach?pid=%u`

2022-01-05  Andras Varga

	* New `-h` topics: `latexconfigvars`, `sqliteschema`. They are mainly
	used for producing info for the Appendices in the manual.

2021-11-30  Rudolf Hornig

	* Improved the output of "opp_run -v".

	- correctly detects the CLANG compiler (along with its version)
	- type of simtime_t type no longer displayed (using double as simtime_t
	  is no longer supported, so it was always omnetpp::simtime_t)
	- large-file-support=yes removed, as 64-bit systems always support long files.
	- added architecture display with ARCH_X86_64, ARCH_AARCH64 labels.

2021-11-29  Andras Varga

	* SqliteOutputScalarManager: fix typename quoting. It needs to be quoted
	as if it was a cPar string expression.

2021-11-07  Andras Varga

	* SectionBasedConfiguration: fix for issue #903 ("crash during initialization
	when mapping module local rng and setting gobal rng by seed-N-mt* instead of
	seed-N-mt")

2021-11-07  Andras Varga

	* SectionBasedConfiguration: added MatchableEntry::str() (for debug	purposes)

2021-08-05  Attila Torok

	* EnvirBase::componentInitBegin(): Set currentModuleId before init stages,
	so the log prefix is not there (we have a banner for it now)

2021-07-06  Andras Varga

	* Inspectors adjusted to recent cClassDescriptor change (void* -> any_ptr).

2021-06-08  Attila Torok

	* Use object->getDescriptor() instead of cClassDescriptor::getDescriptorFor(object)
	wherever possible.

2021-06-15  Andras Varga

	* InifileReader ported to opp_staticpooledstring
	* SectionBasedConfig ported to opp_staticpooledstring.

2021-06-13  Andras Varga

	* EnvirBase: readParameter(): pass inifile entry location to cPar as well.

2021-06-13  Andras Varga

	* InifileReader: minor refactoring

2021-06-09  Andras Varga

	* Report location for parse errors in values coming from ini files

2021-05-17  Andras Varga

	* Follow changes in common/stringutil.h

2021-05-13  Andras Varga

	* Cosmetics on '// namespace' comments

2021-05-05  Andras Varga

	* Switched to the new StringTokenizer class.

2021-05-11  Andras Varga

	* SectionBasedConfiguration: cosmetics: camelize variables

2021-05-11  Andras Varga

	* Follow changes in common/stringutil.h functions

2021-05-11  Andras Varga

	* Use opp_split()/opp_splitandtrim() instead of StringTokenizer.

2021-05-03  Zoltan Bojthe

	* InifileReader: bugfix: type mismatch: char vs char*

2021-04-30  Andras Varga

	* InifileReader: Improve support of indented continuation lines

2021-04-29  Andras Varga

	* SectionBasedConfiguration: better solution for per-object options
	specified w/o object path.

2021-04-29  Andras Varga

	* SectionBasedConfiguration: leave validation of command-line options
	to the validate() function.

2021-04-29  Andras Varga

	* Fix: lifecycle listeners added on startup (using EXECUTE_ON_STARTUP())
	didn't take effect.

	Cause: listeners were added the the boot-time envir, not the permanent
	one. Solution: Take over lifecycle listeners from the boot-time envir.

2021-04-29  Andras Varga

	* EnvirBase: remove lifecycle-related methods (addLifecycleListener(),
	removeLifecycleListener(), notifyLifecycleListeners()), as they were
	moved to its base class cEnvir.

2021-04-29  Andras Varga

	* More modernizing (NULL -> nullptr, use auto for iterator)

2021-04-24  Andras Varga

	* InifileReader: disallow indentation of entries (indentation means
	continuation line).

2021-04-21  Andras Varga

	* InifileReader: rewritten to support indented lines being continuation
	of the previous one.

2021-04-21  Andras Varga

	* InifileReader: refactoring

2021-04-19  Andras Varga

	* Make the "Config " prefix in inifile section headers optional.
	That is, [Config PureAlohaExperiment] may now be also written as
	[PureAlohaExperiment], the two are equivalent.

2021-04-15  Attila Torok

	* Fix a couple of format-string related bugs when constructing cRuntimeError

2021-04-08  Andras Varga

	* Follow cVisitor change: use retval=false in visit(cObject *obj) instead of
	EndTraversalException to stop iterating.

2021-02-05  Levente Meszaros

	* EventlogFileManager: Implemented snapshot and incremental index support.

	IMPORTANT: This means significant (breaking) changes in the elog file format.

	New config options: "eventlog-max-size", "eventlog-min-truncated-size",
	"eventlog-snapshot-frequency", "eventlog-index-frequency", "eventlog-options"

2020-04-30  Attila Torok

	* Properly register "${iterationvarsd}" where needed

2020-12-15  Andras Varga

	* NED package exclusions changed to expect package names instead of folders.
	As part of this change, the -x command-line option changed meaning (take it
	now takes package list instead of folder list); the config option
	"ned-exclusion-path" was renamed to "ned-package-exclusions", and env.var.
	OMNETPP_NED_EXCLUSION_PATH was renamed to OMNETPP_NED_PACKAGE_EXCLUSIONS,
	and their meanings changed too. Note that the NED exclusion feature is new
	in 6.0, so there is no backward compatibility issue.

2020-11-11  Attila Torok

	* On Windows, try to ensure that if the simulation cannot be started due to
	a missing DLL or DLL entry point, a Windows system dialog appears with a
	message indicating what exactly is missing. Note that this information cannot
	be accessed programmatically at the LoadLibrary call site (!!!).

	The solution is to call the SetErrorMode(0) Windows API before loading any
	libraries. This only needs to be done if we are running a GUI (Qtenv),
	because we don't want bogus command-line simulation batches to be interrupted
	with modal dialogs popping up.

2020-11-11  Zoltan Bojthe

	* EnvirBase: Removed safety check that prevented the experimental "fakegui"
	feature from being used.

2020-11-13  Attila Torok

	* Modernizing: Use in-class member initializers wherever possible;
	use "=default" syntax for copy constructors where appropriate.
	Tool: clang-tidy plus manual editing where needed.

2020-10-10  Andras Varga

	* Removed support for USE_OMNETPP4x_FINGERPRINTS.

2020-09-09  Andras Varga

	* Follow cIOutputScalarManager change: recorder methods now return a bool

2020-09-07  Zoltan Bojthe

	* output vector/scalar managers: Ignore writes in the ENDED state.
	Such writes often occur during network teardown, in response to emitted
	model change signals, generated by listeners that are still hooked on
	those signals.

	This change was made necessary by a recent commit that causes listeners
	to be still active during module deletion. (Formerly, deleteModule()
	started with unsubscribing all listeners in that submodule tree -- that
	is no longer done.)

2020-06-23  Andras Varga

	* EnvirBase, EventlogFileManager: follow cEnvir changes due to the
	introduction of SendOptions and transmission updates.

2020-07-01  Attila Torok

	* Fix prefix formatting with %E during initialize (when current event is nullptr)

2020-06-08  Andras Varga

	* Added the "parsim-num-partitions" config option

2020-06-10  Andras Varga

	* Better error message if getting host name fails

2020-06-07  Andras Varga

	* Command-line options: Made -q more permissive: if -c is missing,
	assume "General". This is more in line with what Cmdenv does.

2020-06-07  Andras Varga

	* Command-line options: Added -e <configoption> (print value of the
	given config option).

2020-03-17  Andras Varga

	* Implemented "${datetimef}"

2020-03-15  Andras Varga

	* Added the "config-recording" configuration option, which controls
	the amount of configuration options to save into result files.

2020-03-17  Andras Varga

	* Added support for result directory subdivision: ${iterationvarsd}
	variable, "resultdir-subdivision" configuration option.

	Many file managers and other tools (inc. Eclipse) break down if there are
	too many files in single directory (10,000 or more). The common
	workaround is to group the files into a subdirectory tree. (For example,
	git also uses this technique to store the contents of .git/objects dir).

	In OMNeT++, this problem occurs when a parameter study produces too many
	result files. To solve it, it is natural to use the iteration variables
	to define the directory hierarchy. This commit does it in the following
	way:

	1. Defines a "$iterationvarsd" variable (run attribute), which is similar
	   to "$iterationvarsf", only it contains '/' instead of ','.

	2. Turning on the new "resultdir-subdivision" config option will cause
	   "/${configname}/${iterationvarsd}" to be appended to the name of the
	   results directory. This way, files will be created inside a directory
	   tree under the results directory.

	If you want to set up the directory hierarchy in a different way,
	you can do so by setting the "results-dir" config option and appending
	stuff to the value. E.g.: results-dir = "results/${repetition}"

2019-12-07  Andras Varga

	* Fix eventlogrecorder crash if network is not found.

2019-11-11  Rudolf Hornig

	* Updated documentation of the eventlog-message-pattern option: change
	"field(pattern)" syntax to "field=~pattern".

2019-11-05  Andras Varga

	* Accept expressions as value for (most) config options. For options that
	accept values both with and without quotes (types STRING, FILENAME,
	FILENAMES, PATH), a heuristic decides whether a string is to be taken
	literally or to be evaluated as an expression.

2019-10-23  Andras Varga

	* Follow change: cNedValue renamed to cValue

2019-10-21  Andras Varga

	* Follow change: cPar::parse() and cExpression::Context ctor now expect a
	base directory argument.

2019-10-12  Andras Varga

	* Fix quoting of values in result file 'config' lines.

	Certain types of config *options*, namely string options and
	filename/filename list options, can appear in ini files with optional
	quotation marks. This quoting does not affect meaning, and is in fact
	removed by cConfiguration::getAsString/getAsFilename methods. These
	quotation marks don't need to be preserved when those entries are written
	into result files, so we remove them here.

2019-10-10  Andras Varga

	* Micro-optimization: LogFormatter to spare cost of event->getClassName()
	on each event if possible.

2019-08-01  Andras Varga

	* Follow change: intpar_t renamed to intval_t.

2019-07-31  Andras Varga

	* Result file managers: refactoring: Introduce 'state' variable to better
	ensure correct usage; rename initialize() to openFileForRun(), etc.

2019-07-30  Andras Varga

	* Result file version number bumped from 2 to 3.

2019-07-30  Andras Varga

	* Several global config options change to be per-run: scheduler-class,
	 debug-on-errors, print-undisposed, fingerprintcalculator-class.

2017-07-16  Andras Varga

	* Follow change: The common::Histogram class now stores binEdges,
	binValues plus underflow/overflow instead of bins.

2019-07-24  Andras Varga

	* Added check to refuse to generate fingerprint that contains 'f' or 'y' as
	ingredient, because cmdenv-fake-gui and computing fingerprint from figures
	and display strings are currently experimental features.

2019-07-18  Andras Varga

	* Save component type as "typename" pseudo parameter to scalar files.

2019-07-18  Andras Varga

	* Output scalar files: Save parameter attrs as well.

2018-07-09  Andras Varga

	* Allow recording actual module/channel parameter values into the output
	scalar file. Added config option **.param-recording=true/false; implemented
	recordParameter() methods.

2018-07-09  Andras Varga

	* Result files: Save full config, not only param assignment lines.

2019-07-10  Rudolf Hornig

	* Fix Windows-specific build error in stream.seekg() call.

2019-07-03  Andras Varga

	* LogFormatter: Fix: Prevent aborting when user enters invalid log prefix in
	Qtenv Preferences dialog.

2019-07-03  Andras Varga

	* LogFormatter: added "%<" (trim preceding whitespace) diretive.

2019-04-29  Andras Varga

	* Follow change: XML parser moved from nedxml to common.

2019-04-25  Andras Varga

	* Follow change: cXMLElement ctor changed.

2019-04-16  Andras Varga

	* "-h nedfunctions" to list unit conversion functions as well.

2019-04-11  Andras Varga

	* Ported constraint evaluator to use the new Expression class. It should
	work exactly as before.

2019-04-04  Rudolf Hornig

	* Makefile improvements.

2019-04-02  Andras Varga

	* Added ned-exclusion-path= config option.

2019-03-21  Andras Varga

	* Accept the OMNETPP_NED_PATH environment variable in addition to NEDPATH.

2019-03-21  Andras Varga

	* Implemented NED exclusion path (-x <nedexclusionpath> option,
	OMNETPP_NED_EXCLUSION_PATH environment variable).

2019-03-21  Andras Varga

	* Removed obsolete command-line options -x, -X, -g, -G.

2019-03-21  Andras Varga

	* Image path handling changed: Added -i <imgpath> option (may occur
	multiple times); removed "./bitmaps" from default image path.

2019-03-21  Andras Varga

	* Updated help for the -n option; hide -p which belongs to a feature under
	development.

2019-03-20  Andras Varga

	* EventlogRecorder: in ModuleCreatedEntry, record
	module->getModuleType()->isSimple() instead of module->isSimple().

2019-03-19  Andras Varga

	* Do not complain about missing omnetpp.ini if a --network option is
	present.

2019-03-19  Andras Varga

	* Refactoring: Share ARGSPEC; associated help text updated.

2019-03-19  Andras Varga

	* Startup code (ini reading) minor refactoring.

2019-03-14  Andras Varga

	* Allow parameters to be specified on the command line.

2019-03-18  Andras Varga

	* NED path handling, with behavior change. Multiple -n options are now
	accepted. Change: before, $NEDPATH was ignored if a -n option was present,
	no longer so.

2019-03-18  Andras Varga

	* Args handling: If a command-line option with a value (e.g. -u <ui>) occurs
	multiple times, take the last one.

2019-02-27  Andras Varga

	* Improve "-h nedfunctions" output: break long lines.

2019-02-27  Andras Varga

	* "-h resultfilters" and "-h resultrecorders" to print the descriptions of
	the filter/recorder types.

2019-02-22  Andras Varga

	* Added support for embedding NED files: EnvirBase::setup() now loads
	NED files embedded into the simulation program as string literals
	(embeddedNedFiles global variable).

2019-02-11  Andras Varga

	* EventlogFileManager: Follow change: ModuleMethodBegin/End renamed to ComponentMethodBegin/End.

2019-01-30  Andras Varga

	* EnvirBase: startRun() renamed to prepareForRun(), endRun() eliminated.

	startRun() was renamed to break association with startRun() methods of
	extension classes like scheduler, output vector manager, output scalar
	manager, etc.

	endRun() was eliminated for a similar reason. Besides, it only contained
	"notifyLifecycleListeners(LF_ON_RUN_END)", and such notifications are
	inlined everywhere else.

2019-01-30  Andras Varga

	* SqliteOutputScalarManager: fix: there is no longer need to record itervars
	as scalars. The same change for the native file format was done in version 5.2.

2019-01-28  Andras Varga

	* Fix: Record eventlog button caused crash in Qtenv if there was no network
	set up.

2019-01-16  Rudolf Hornig

	* Makefiles improved

2018-11-30  Andras Varga

	* Remove "./bitmaps;./images" from OMNETPP_IMAGE_PATH, and put them
	into the "image-path" config option instead.

2018-06-18  Andras Varga

	* SectionBasedConfiguration: cosmetics: terminology change: "group" -> "bin".

2018-08-30  Rudolf Hornig

	* Include WITH_OSGEARTH in compiled-in build information string.

2018-06-28  Andras Varga

	* Remove obsolete result file recorders.

2018-06-15  Andras Varga

	* Remove printing porting hints for 3.x inifiles.

2018-06-27  Andras Varga

	* Follow change: Tkenv removed.

2020-01-06  ------ omnetpp-5.6 released ------

2019-12-07  Andras Varga

	* Fix: EventLogRecorder crashed if network was not found

2019-07-03  Andras Varga

	* LogFormatter: Added "%<" (trim preceding whitespace) directive

2019-05-15  ------ omnetpp-5.5 released ------

2019-04-27  Andras Varga

	* XML: fix the issue of accumulating whitespace node content slowing
	down the parsing process

2019-03-20  Andras Varga

	* Fix: @statistic signal checking used wrong isSimple()

2019-03-14  Andras Varga

	* Feature: Allow module parameter values to be specified on the command line,
	and they take precedence over values specified in the ini file.	The syntax
	is similar to that of options. Example:
	"opp_run --**.serviceTime=100ms --sim-time-limit=1000s"

2019-02-27  Andras Varga

	* Slightly improved -h <topic> output

2019-02-27  Andras Varga

	* Feature: Output of opp_run -h resultfilters / resultrecorders now includes
	the descriptions of result filter and recorder types.

2019-03-11  Andras Varga

	* Fix broken dependencies in Makefiles

2019-01-30  Andras Varga

	* SqliteOutputScalarManager: fix: there is no longer need to record
	itervars as scalars. The same change for the native file format was
	done for version 5.2.

2019-01-28  Andras Varga

	* Fix: Check for existence of eventlogManager because the 'record eventlog'
	button caused crash in Qtenv if there was no network set up.

2018-06-25  ------ omnetpp-5.4.1 released ------

2018-06-14  Rudolf Hornig

	* Envirbase: fix unbalanced #endif

2018-06-11  ------ omnetpp-5.4 released ------

2018-06-08  Attila Torok

	* EnvirBase: implemented ensureDebugger() which replaces attachDebugger().
	The method of attaching a debugger has been enhanced. I.e. it can detect
	when the process is already being debugged, and does not launch another
	debugger in that case. Also, when launching a debugger is needed, it checks
	beforehand that external debuggers are permitted to debug this process.

	* attach-on-startup now detects the debugger before launching one

	* debug command (debugger-attach-command config option) can now be
	overridden by the OMNETPP_DEBUGGER_COMMAND env. var.

	* Use lldb as default debugger on macOS - gdb is not codesigned.

	* Adjust description of debugging-related config options.

2018-04-11  ------ omnetpp-5.3 released ------

2018-03-01  Andras Varga

	* Follow histogram API changes.

2018-01-26  Andras Varga

	* Follow histogram API changes.

2017-01-16  Andras Varga

	* Replace gettimeofday() occurrences with opp_get_monotonic_clock_usecs(),
	and struct timeval with plain int64_t.

2017-11-26  Andras Varga

	* Follow NED->Ned and MSG->Msg naming change in class/function names

2017-12-08  ------ omnetpp-5.2.1 released ------

2017-09-18  ------ omnetpp-5.2 released ------

2017-08-14  Andras Varga

	* loadExtensionLibrary(): add "_dbg" suffix when in debug mode (Debug
	executables prefer loading debug libraries.)

2017-04-06  Andras Varga

	* Modernizing: use C++11's range-based for loops where applicable, using
	clang-tidy's modernize-loop-convert.

	* Modernizing: replace INT64_PRINTF_FORMAT and LL with C++11's PRId64.
	Note: PRId64 includes the "d" that was not part of INT64_PRINTF_FORMAT
	alias LL.

2017-07-12  Andras Varga

	* Output scalar file recorders: sum and sqrSum are no longer saved for
	weighted statistics. This is to follow recent cStddev/cWeightedStddev
	change.

2017-07-13  Andras Varga

	* Output scalar files: do not save numeric iteration variables (of
	parameter studies) as scalars. Instead we'll add them (as scalars)
	at load time, if needed.

2017-06-21  Andras Varga

	* Cleanup: remove the leading "c" from the names of remaining classes,
	namely cXMLDocCache, cFileSnapshotManager, cAkOutputVectorManager

2017-06-22  Andras Varga

	* Switch to new scalar/vector file recorders: The default values for
	the outputscalarmanager-class= and outputvectormanager-class= config
	options	are now the new classes OmnetppOutputScalarManager and
	OmnetppOutputVectorManager. These classes rely on the new result
	file writer classes in common/.

	The old classes cIndexedFileOutVectorManager and cFileOutScalarManager
	still exist. They will be removed in a later version of OMNeT++.

2017-06-22  Andras Varga

	* Fix: force SQLite result file recorder classes to be included into
	simulation executables by the linker.

2017-04-04  Andras Varga

	* Old result file recorders: save iteration variables separately from
	run attrs, into 'itervar' lines.

2017-03-30  Andras Varga

	* Refactoring: RunData class converted a collection of utility functions
	(ResultFileUtils). Results in less state and more flexibility.

2017-07-12  Andras Varga

	* EnvirBase: changed the lifecycle of several plugin objects to per-run,
	i.e. those objects are now deleted and re-created between runs. Affected
	plugins: event log recorder, output vector file recorder, output scalar
	file recorder, snapshot recorder, future event set (FES).

	The corresponding configuration options have also become per-run options:
	eventlogmanager-class=, outputvectormanager-class=, outputscalarmanager-class=,
	snapshotmanager-class=, futureeventset-class=.

	Side effect: in output vector files, vector IDs now start again from 0
	at the start of each run when running multiple runs. Before, they continued
	from where the previous run left off.

2017-03-24  Andras Varga

	* EnvirBase: refactoring: replaced CREATE_BY_CLASSNAME() macro by
	createByClassName() template function

2017-05-25  Rudolf Hornig

	* Updated makefiles for speeding up the build:
	- generated files are created only once, even when using parallel build
	- binaries are copied to their final destination using proper makefile
	  targets

2017-06-08  Attila Torok

	* EnvirBase: follow cEnvir changes (addition of refOsgNode()/unrefOsgNode())

2017-03-30  Andras Varga

	* Result file recorders: space changes in result files for consistency
	and to minimize space differences with new recorders. Affected classes:
	cFileOutputScalarManager, cFileOutputVectorManager, and
	cIndexedFileOutputVectorManager

2017-05-08  ------ omnetpp-5.1.1 released ------

2017-03-31  ------ omnetpp-5.1 released ------

2017-03-16  Andras Varga

	* Added new classes OmnetppOutputScalarManager, OmnetppOutputVectorManager
	which rely on result file writer classes in envir. These classes are not
	activated yet (the old classes cIndexedFileOutVectorManager and
	cFileOutScalarManager are still the default result recorder classes.)

	* Added the cFileOutputVectorManager_merged class, which is
	an intermediate state (cIndexedFileOutVectorManager and its
	base class merged.)

2017-03-16  Andras Varga

	* SQLite result file managers changed to use corresponding result file
	writer classes in the common library.

2017-03-17  Rudolf Hornig

	* build: removed obsolete targets in envir's Makefile

2017-03-16  Rudolf Hornig

	* Fix: Detection of release vs. debug mode collision is now safer on
	Windows 7 (GetProcAddress was not reliable).

2017-03-10  Andras Varga

	* SQLite result file recording: 'histattr' table renamed to 'statisticattr'.

2017-03-02  Andras Varga

	* SectionBasedConfig: fix bug in unrollConfig(). When doing "-q runs",
	seed-set=${10,20,30} caused assertion failure near sectionbasedconfig.cc:650.

2017-02-23  Andras Varga

	* Fix #995: Assert condition fails for ini files with CRLF line
	terminators in inifilereader. Cause: right-trimming of the line was lost
	when converting from FILE* I/O to iostream in late last year for 5.1pre2.

2017-03-16  Rudolf Hornig

	* Detecting whether the loaded model is using release or debug mode
	libraries is now safer as we are not just testing for the presence
	of a symbol that is available only in the release mode, but also checking
	for the actual value of that variable. This was necessary because on
	Windows 7 the GetProcAddress() function sometimes returned a non-null
	pointer for a symbol even if the symbol was not present in the process.
	This bug made the opp_run executable think that both release and debug
	versions of the omnetpp kernel was loaded.

2017-03-02  Andras Varga

	* envir: SectionBasedConfig: fix bug in unrollConfig()
	When doing "-q runs", seed-set=${10,20,30} causes assertion failure near
	sectionbasedconfig.cc:650

2017-02-23  Andras Varga

	* envir: fix #995: Assert condition fails for ini files with CRLF line
	terminators in inifilereader

2017-02-06  ------ omnetpp-5.1pre3 released ------

2017-01-06  Andras Varga

	* Command line: '-h' to respect 'verbose' flag; added '-h configvars'

2017-01-02  Andras Varga

	* Command line: fix "-h figures" (take the list from the place
	Register_Figure() stores it)

2016-12-23  ------ omnetpp-5.1pre2 released ------

2016-12-19  Andras Varga

	* cpu-time-limit option: do not truncate to whole seconds; measure really
	CPU usage and not elapsed time (use clock() instead of gettimeofday())

	* Added real-time-limit option that measures elapsed time (gettimeofday)

	* Time limit checking frequency changed from every 256 events to every
	1024 events.

	* Factored out time limit handling into a Stopwatch class.

2016-12-16  Andras Varga

	* scalar file recording: change "." to "_runattrs_" as the module
	name used for run attributes saved as scalars

2016-11-30  Rudolf Hornig

	* build: Makefile refactored. Added clang-c2 support and optimized
	the build process.

	* build: removed Makefile.vc, as Visual C++ builds are now handled
	by the standard Makefiles.

2016-12-06  Andras Varga

	* build: Added support for the PREFER_SQLITE_RESULT_FILES macro

2016-11-24  Andras Varga

	* OMNeT++ result file recorders: refactoring, small improvements

2016-11-25  Andras Varga

	* Revised SQLite-related code: configuration options, error handling,
	internal logic, refactoring, etc.

	To switch to SQLite-based result files, add the following to your omnetpp.ini:

	outputscalarmanager-class = "omnetpp::envir::SqliteOutputScalarManager"
	outputvectormanager-class = "omnetpp::envir::SqliteOutputVectorManager"

	The file names will not change (new files will still get the .sca and .vec
	extensions), only the file format. Use the SQLite console (sqlite3) or
	a GUI program like SQLiteBrowser to view the contents of the resulting
	SQLite result files.

	Further options that affect the recording of SQLite result files are:

	Scalars: output-scalar-file, output-scalar-file-append, output-scalar-
	db-commit-freq (NEW), **.scalar-recording, **.bin-recording.

	Vectors: output-vector-file, output-vector-file-append (NEW),
	output-vector-db-indexing (NEW), **.vector-recording, **.vector-
	record-eventnumbers, **.vector-recording-intervals, output-vectors-
	memory-limit, **.vector-buffer

2016-11-23  Andras Varga

	* Added initial support for SQLite-based result files [Zoltan Bojthe].

2016-12-06  Andras Varga

	* EnvirBase: notifyLifecycleListeners() to let exceptions through

2016-11-21  Andras Varga

	* EnvirBase: sim-time-limit=0s and cpu-time-limit=0s to take effect

2016-10-28  Andras Varga

	* Error messages refined (start with capital letter, use apostrophes
	for quoting, etc.)

2016-10-27  Andras Varga

	* EnvirBase: added -m option ("merge stderr into stdout")

	This option is useful because when launching simulations from the IDE,
	stdout and stderr get interleaved in quite a random manner in the
	Console, and it's very confusing.

2016-10-25  Andras Varga

	* InifileReader: use C++ I/O instead of FILE*

2016-10-21  Andras Varga

	* SectionBasedConfig: internal refactoring

2016-10-19  Andras Varga

	* Follow cEnvir API change regarding askyesno(), putsmsg(), alert(), etc.

	* EnvirBase: unified way of printing error/warning messages (err()/warn())

2016-10-19  Andras Varga

	* FileOutputScalarManager: fix: disabling scalar recording still created
	a small sca file that contained a header only

2016-10-05  Andras Varga

	* EnvirBase: use C++-style I/O for all logging

2016-10-03  Andras Varga

	* EnvirBase: Added the -s (silent, i.e. non-verbose) command-line option.

2016-09-27  Andras Varga

	* Fix: command-line "--constraint=" setting did not take effect (see
	test/envir/cmdline_options_runinfo_5.test)

2016-09-25  Andras Varga

	* Scenario class: Implemented the iteration-nesting-order config option.

	* Also: Scenario class refactored, using stlutil.h and C++11 features

2016-09-23  Andras Varga

	* Scenario class: removed unused VariableReference inner class

2016-09-26  Andras Varga

	* SectionBasedConfiguration: substituteVariables() change: do not
	substitute inside substituted content. (see paramstudy_iter_16.test)

2016-09-25  Andras Varga

	* Run filtering: The -r option now also	accepts a run filter expression
	as an altenative to a list of run numbers and run number ranges.
	Use the new -q option to query the list of matching runs.

	Example: -c Aloha -r '$numHosts=>20 && $numHosts<=100' -q runconfig

2016-09-22  Andras Varga

	* SectionBasedConfiguration: added getKeyValuePairs(), refactored
	getParameterKeyValuePairs().

2016-09-25  Andras Varga

	* Changed default result file naming scheme: Instead of using the
	run number as part of the file name which has little attached meaning,
	the values of the iteration variables plus the repetition counter.
	For example, "PureAlohaExperiment-4.sca" becomes "PureAlohaExperiment-
	numHosts=10,mean=2-#0.sca".

	Technically, the default has changed from
	"${resultdir}/${configname}-${runnumber}.<ext>" to
	"${resultdir}/${configname}-${iterationvarsf}#${repetition}.<ext>".

	This affects the following configuration options: eventlog-file,
	output-scalar-file, output-vector-file, snapshot-file.

	To that end, the "iterationvarsf" inifile variable has been introduced,
	which is the same as "iterationvars" but characters that are invalid or
	inconvenient in file names are quoted/encoded in it.

	At the same time, "iterationvars2" was removed due to lack of usefulness.

2016-08-23  Andras Varga

	* EventlogFileManager: fix: filename was always "General-0.elog", literally

2016-08-23  Andras Varga

	* Follow sim.kernel change: renamed info() to str()

2016-07-25  Andras Varga

	* EnvirBase: follow sim. kernel change: messageSendHop() gained a
	"discard" parameter

2016-04-19  Andras Varga

	* EnvirBase: removed messageSent_OBSOLETE(), a relic from OMNeT++ 3.x

2016-07-11  Andras Varga

	* EnvirBase: Factored out a StatisticBuilder class, and moved it
	into the simulation kernel (src/sim)

	* Further improvements in @statistic configuration, see sim/ChangeLog.

2016-06-23  Rudolf Hornig

	* The makefile now uses compiler-generated dependency files.

2016-04-13  Andras Varga

	* Speedometer: added getNumEventsSinceIntervalStart(); camelize
	variable names

2016-04-13  ------ omnetpp-5.0 released ------

2016-03-31  Levente Meszaros

	* Edited markup in config option descriptions.

	* Refined "opp_run -h latexconfig" operation to add line break
	opportunities (\allowbreak). This change allows better LaTeX
	word wrapping and hyphenation in the appendix.

2016-03-23  Zoltan Bojthe

	* Added markup to config option descriptions.

	* Added markup support to config option descriptions. Two notations are
	supported: `backticks` means monospace, "\n" means linebreak (and "\n\n"
	should mean paragraph separator). "opp_run -h latexconfig" was updated
	accordingly.

2016-03-21  Andras Varga

	* cEnvir::recordEventlog was not in use by simkernel, moved into EnvirBase

2016-03-10  ------ omnetpp-5.0rc released ------

2016-03-10  Levente Meszaros, Andras Varga

	* fingerprint-class option renamed to fingerprintcalculator-class.

2016-02-26  Levente Meszaros

	* Changed EventlogFileManager to implement the new cIEventlogManager plugin
	interface. Added startRecording() and stopRecording() as required by the
	plugin interface. Removed all other unclear function calls from cEnvir to
	EventlogFileManager such as configure(), hasRecordingIntervals(), and
	clearRecordingIntervals().

2016-02-26  Andras Varga

	* Fixed bug #950: inifile parameter assignments were not saved into .sca file.

2016-02-24  Andras Varga

	* Factored out "-h xxx" functionality into envirutils.cc.

2016-02-24  Andras Varga

	* Refined per-object config option kinds (added COMPONENT and CHANNEL).

2016-02-23  Andras Varga

	* Fixed double call to dumpResultRecorders().

2016-02-22  Rudolf Hornig

	* Updated version number and copyright headers.

2016-02-22  Andras Varga

	* Introduced **.statistic-recording and **.bin-recording options.
	Background is the following. In 4.x, **.scalar-recording=<bool>
	was used as an enable/disable switch for three different things:

	  1. recording of individual scalars and statistic objects (cStatistic),
	     including scalar recording modes of a @statistic (foo:mean,
	     foo:stddev, etc.)
	  2. main switch for @statistic (when set to false, no result
	     recorders were added at all)
	  3. recording of histogram bins (cells) of a statistic object
	     (when key contained the ":histogram" suffix)

	Using 1) and 3) together sometimes resulted in weird keys like
	**.foo:histogram:histogram.scalar-recording, and poor usability:
	after adding a **.scalar-recording=false line, one needed 3
	lines to re-enable a histogram:
	**.foo.scalar-recording=true,
	**.foo:histogram.scalar-recording=true,
	**.foo:histogram:histogram.scalar-recording=true).

	Now, 2) is now controlled with **.statistic-recording, and 3) with
	**.bin-recording.

	* Improved the descriptions of several per-object config options

2016-02-08  Levente Meszaros

	* Removed cEnvir::isDisabled() and added cEnvir::isLoggingEnabled(). Renamed
	cEnvir::disableTracing member variable to cEnvir::loggingEnabled. Cleaned up
	cEnvir::isLoggingEnabled() and cEnvir::isExpressMode() usages.

2016-02-05  Andras Varga

	* Renamed getRNGMappingFor(component) to preconfigure(component)

2016-01-29  Rudolf Hornig

	* Show WITH_OSG flag in opp_run -v if OSG was detected.

2016-01-26  Andras Varga

	* Switched from cEnvir::getClassNameForRenderer() to cEnvir::getRendererClassName().

2015-12-07  ------ omnetpp-5.0b3 released ------

2015-12-02  Andras Varga

	* EnvirBase: implemented cEnvir::resolveResourcePath()

	* Added the "image-path" config option that replaces tkenv-image-path.

2015-11-23  Levente Meszaros, Andras Varga

	* Fingerprint computation made more powerful/flexible; see sim/ChangeLog
	for more details. The envir library contributes to this feature
	by providing the fingerprinter-class configuration option, and support
	for the USE_OMNETPP4x_FINGERPRINT compatibility compile-time option.

2015-11-19  Andras Varga

	* Made RNG-to-module mapping more flexible: the *.rng-<N> config option
	now allows expressions as well. Limitation: only parameters of modules
	that have been already created may be referenced (i.e. parent, and
	generally, ancestor modules, and preceding sibling modules). Parameters
	of the same module cannot be accessed (i.e. this.<paramname> is not
	allowed), because they not yet exist when the RNG mapping is set up.

	Hint: index, parentIndex, and ancestorIndex(level) may also be used
	in the expression. This allows things like assigning a separate RNG
	to each element of a module vector.

2015-11-17  Andras Varga

	* Added the simtime-resolution config option, more user-friendly
	replacement for the now-deprecated simtime-scale. simtime-resolution
	accepts time units (s, ms, us, ns, ps, fs, as), power-of-ten multiples
	of such a unit (e.g. 100ms), and also base-10 scale exponents in the
	-18..0 range (mostly for backward compatiblity with simtime-scale).

	Examples:
	   simtime-resolution = ms
	   simtime-resolution = 10ns
	   simtime-resolution = -6  (==microseconds)

2015-11-09  Andras Varga

	* Eventlog recording: when recording method calls where the caller
	or callee is a channel, record the channelId. Until now only IDs of
	modules have been recorded.

2015-10-16  Andras Varga

	* omnetpp namespace made permanent (cannot be turned off):
	- removed configure option and preprocessor symbol USE_NAMESPACE
	- removed related macros: NAMESPACE_BEGIN, NAMESPACE_END,
	  USING_NAMESPACE, OPP, OPP_STR, OPP_PREFIX etc.

2015-07-20  ------ omnetpp-5.0b2 released ------

2015-06-16  Andras Varga

	* Cleanup: prefer ++it to it++ (less copying)

2015-06-12  Andras Varga

	* Adapted to simkernel iterator API changes (added operator* and
	operator->, deprecated operator())

2015-06-11  Andras Varga

	* if(dynamic_cast) refactoring: change code like

	    if (dynamic_cast<cComponent *>(object) != nullptr) {
	        cComponent *component = (cComponent *)object;
	        ...
	    }

	To:

	    if (cComponent *component = dynamic_cast<cComponent *>(object)) {
	        ...
	    }

2015-06-16  Andras Varga

	* FES made replaceable:
	- introduced futureeventset-class= config option
	- adapted to simkernel API change

2015-06-08  Andras Varga

	* Cleanup: longer header guards

2015-06-08  Andras Varga

	* Cleanup: code formatting

2015-05-15  Andras Varga

	* Cleanup: use per-folder nested namespaces: omnetpp::envir, omnetpp::tkenv,
	omnetpp::layout, omnetpp::common, omnetpp::eventlog, etc.

2015-05-22  Andras Varga

	* Modernizing: added the 'override' keyword (C++11) to overridden methods;
	it becomes blank when using with an older compiler.

2015-05-21  Rudolf Hornig

	* Modernizing: replaced NULLs by 'nullptr' (C++11); it is defined as 0
	when using an older compiler.

2015-05-13  Andras Varga

	* Added getUniqueNumber() overflow check

2015-05-12  Andras Varga

	* Cleanup: several data members, function arguments and local variables
	changed to camelCase; removed "s" prefix from names of inner structs

2015-04-20  Andras Varga

	* Cleanup: use C++ names of C headers (e.g. <cstdio> instead of <stdio.h>)

2015-04-14  Andras Varga

	* Occurrences of the "simulation" macro replaced by getSimulation() calls,
	and "ev" by getEnvir() calls.

2015-04-12  Andras Varga

	* Cleanup: copyright years updated

2015-04-08  Andras Varga

	* Modernizing:

	- Use a fixed include path (-Iinclude -Isrc) for all source folders
	  under src/, and qualify cross-folder #includes with the folder
	  name (e.g. change #include "stringutil.h" to #include "common/stringutil.h").
	  This increases readbility and reduces the chance of including a wrong
	  header.

	- In source files, sort #include statements by folder.

2015-03-04  ------ omnetpp-5.0b1 released ------

2014-01-28  Andras Varga

	* Removed eventlog support for module reparenting (i.e. logging of
	cModule::changeParentTo()), because tools cannot easily support it

2013-09-26  Andras Varga, Levente Meszaros

	* Adapted to logging API changes (see include/ChangeLog):

	- Log lines can now be prefixed with information such as the module
	  path; simulation time; event's class and object name; file/line
	  of the log statement; class, name and pointer of the object
	  containing the log statement; etc. The format of this prefix can be
	  changed from ini files.

	- Implementation-wise, EnvirBase's printf() and sputn() methods were
	  removed, and replaced by log(cLogEntry*). The LogFormatter class
	  was added.

2013-01-28  Andras Varga

	* Follow through with the introduction of cEvent; see related ChangeLog
	entry in include/.

2014-11-27  ------ omnetpp-4.6 released ------

2014-11-28  Andras Varga

	* Fix #788: seed-set=${1,2,3} syntax results in error
	* Fix #789: inifilereader.cc: memory corruption

2014-06-30  ------ omnetpp-4.5 released ------

2014-02-14  Andras Varga

	* EnvirBase: opt_xxx members factored out to a separate class
	EnvirOptions; Cmdenv and Tkenv were changed accordingly, too.

2014-02-13  ------ omnetpp-4.4.1 released ------

2013-01-28  Andras Varga

	* cSimulation: startRun() renamed to callInitialize(), endRun() removed

2013-01-28  Andras Varga

	* Make use of simulation lifecycle listeners; see related ChangeLog
	entry in include/.

2013-01-28  Andras Varga

	* Followed cOutputVectorManager/cOutputScalarManager/cSnapshotManager
	renaming in sim/ (they became cIOutputVectorManager, etc.)

2014-02-13  ------ omnetpp-4.4.1 released ------

2013-12-20  ------ omnetpp-4.4 released ------

2014-01-07  Andras Varga

	* startup.cc: use CodeFragments::executeAll(CodeFragments::STARTUP) and
	CodeFragments::executeAll(CodeFragments::SHUTDOWN) to run startup/cleanup
	code fragments.

2013-12-20  Andras Varga

	* Feature: added Just-in-Time debugging. Adds the following config options:
	  - debugger-attach-on-startup=<bool>
	  - debugger-attach-on-error=<bool>
	  - debugger-attach-command=<string>
	  - debugger-attach-wait-time=<time>

2013-10-28  Rudolf Hornig

	* Fixes for compiling with clang

2013-10-22  Andras Varga

	* Added check-signals=<bool> config option.

2013-04-24  Andras Varga

	* Fix: the --output-vector-file=... option was working poorly when specified
	on the command line:
	  - did not support relative filenames (basedir of its KeyValue was unfilled)
	  - did not support ${} variables like ${configname}

2013-09-12  ------ omnetpp-4.3.1 released ------

2013-04-02  ------ omnetpp-4.3 released ------

2013-02-08  ------ omnetpp-4.3rc1 released ------

2012-03-27 Tamas Borbely

	* Fix bug #555: Memory leak in output vector recording. When the output
	vector was deleted, its buffer was not freed. [From David Eckhoff]

2012-03-13  ------ omnetpp-4.2.2 released ------

2012-01-17  ------ omnetpp-4.2.1 released ------

2011-10-28  ------ omnetpp-4.2 released ------

2011-09-11  ------ omnetpp-4.2rc1 released ------

2011-07-17 Rudolf Hornig

	  * opp_run: Changed how opp_run is used to start debug and release models.

	  There are two programs now to start models built as shared libs:
	  - 'opp_run_release' is built using release opp libraries and starts any release
	model directly by invoking evMain.
	  - 'opp_run' is linked against debug opp libs. It first loads all libraries
	into the address space dynamically and check for the simbol __is_release_opp_sim__
	(that is present only in release builds). If it does not find it, the
	model is debug and proceeds normally by invoking evMain. If it decides that
	the model is 'release', it reloads the whole simulation by exec-ing it using
	'opp_run_release'.

	The simulation IDE also detects whether release or debug version of the model is
	started and it launches it with either 'opp_run' or 'opp_run_release'. This is
	required because on Windows, 'opp_run_release' is started as a different process
	and the IDE would not be able to control/kill the 'opp_run_release' process if
	it would be started by opp_run.

	Note: The detection process does not work if the shared models libs are specified
	in the INI file.

	Note2: Because of the above changes the main() function moved from the oppenvir
	library to a sparate statically linked library (oppmain). This library must be linked
	with executable simulation models. This requires changes in the makefiles.
	opp_makemake generates corract makefiles but the the makefiles *MUST* be recreated
	when upgrading to OMNeT++ 4.2 and working on the command line. (The IDE automatically
	recreates the makefiles, so in this case no further action is needed)

2011-06-25  Andras Varga

	* Result filter/recorder stuff moved into the simkernel, so that
	users can contribute their own result filters and recorders.

2011-05-26  Levente M�sz�ros

	* Implemented number filter expressions using multiple inputs for
	statistics source expressions. Enhanced error reporting for constant
	expressions that are meaningless as statistics source (they never
	provide a value).
	  - source="3.14"       => error, meaningless
	  - source="3.14 / 180" => error, meaningless
	  - source="sum(packetLength)/count(packetLength)" => error, multiple
	    uses of the same signal is still not supported due to output glitches
	  - source="count(packetSent)/count(packetDropped)" => valid expression

2011-05-25  Tamas Borbely [docu below by Andras]

	* Ini files: iterations (${...}) can now refer to other iteration
	variables, using the dollar syntax ($var) or the dollar-brace syntax
	(${var}). An example:
	    **.foo = ${i=1..10}
	    **.bar = ${j=1..$i}  # $i could also be written as ${i}

	Note that this improvement makes it possible to have loops where
	the inner iteration range depends on the outer one, like in the above
	example.

	When needed, the default top-down nesting order of iteration loops is
	modified (loops are reordered) to ensure that expressions only refer
	to more outer loop variables, but not to inner ones. When this is
	not possible, an error is generated with the "circular dependency"
	message.

	Variables are substituted textually, ALWAYS, and the text resulting
	from substitution is NOT evaluated except in the '<from>..<to> step
	<step>' syntax, and in the constraint= inifile option. Generally,
	interpreting the resulting string is left up to the NED parameter's
	expression evaluation. Illustration:
	    **.foo = ${i=1..3, 1s+, -}001s
	will result in the foo parameter receiving the following values:
	1001s, 2001s, 3001s,  1s+001s, -001s.

	Substitution also works inside string constants within ${}.
	    **.foo = "${i=Jo}"  # -> Jo
	    **.bar = ${"Hi $i", "Hi ${i}hn"}  # -> Hi Jo /John

	(However, string constants outside ${..} are a little different: e.g.
	in **.baz="Hello $i" the variable won't be substituted, you need to
	write **.baz="Hello ${i}".)

	CAUTION: Because of textual substitution, similarly to C/C++ macros,
	variables in arithmetic expressions should generally be protected
	with parentheses. Consider the lines below:
	    **.foo = ${i=10}
	    **.bar = ${j=$i+5}
	    **.baz = ${k=2*$j}   # bogus! $j should be written as ($j)
	    constraint = $i+50 < 2*$j  # ditto: should use ($i) and ($j)

	Here, the baz parameter will receive 2*10+5 which is 25, instead of
	the expected 30. Like with C macros: mind the parens!

	Rationale: the text substitution model was chosen for greater
	flexibility as well as the ability to produce a more consistent
	semantics.

	* Incompatible change: In the constraint= configuration option,
	variables now MUST be referenced with the $foo (or ${foo}) syntax,
	for consistency with variable references inside ${...} iterations.
	(The dollar sign used to be optional.) For example, the line
	    constraint = x+y < 10
	must be changed to
	    constraint = $x+$y < 10
	or, for greater safety, to
	    constraint = ($x)+($y) < 10

	* Parallel iteration: it is now supported to use named iteration
	variables and parallel iteration together (${foo=...!bar} syntax.)
	This was not supported previously.

	* Some iteration-related error messages have been improved to provide
	more context.

2011-05-06  Andras Varga

	* sectionbasedconfig.cc: fix bug #291: getNumRunsInConfig() didn't
	throw exception for invalid (nonexistent) config names

2011-05-05  Andras Varga

	* fix #290: InifileReader::readLineInto() can remove whitespace from
	the middle of lines that are longer than 512 characters

2011-05-05  ------ omnetpp-4.2b2 released ------

2011-04-20  Andras Varga

	* note: "type-name" per-object config option has been renamed in
	sim/netbuilder to "typename" for consistency with NED, thus creating
	an exception to the rule that all per-object options have a hyphen
	in their names. Code that checks for hyphen to identify per-object
	config options have to be updated to recognize "typename" as well.

	* sectionbasedconfig: issue a helpful error message when we encounter
	"type-name" in an ini file.

2011-04-15  Andras Varga

	* implemented the new cEnvir methods getParsedXMLString(),
	forgetParsedXMLString() and flushXMLParsedContentCache().
	Required adding similar methods to cXMLDocCache.

2011-02-23  ------ omnetpp-4.2b1 released ------

2011-02-21  Tamas Borbely

	* Ini files: better parsing for iteration variables, i.e the ${...}
	syntax. Now we use a tokenizer (StringTokenizer2 in src/common)
	that honors nested parens/brackets/braces and also quotation marks
	when parsing the list of values to iterate over.
	For example, ${value=1,2,uniform(0,3)} is now correctly parsed as
	'1', '2' and 'uniform(0,3)' and not as '1', '2', 'uniform(0' and
	'3)' as before. Similarly, ${value="foo,bar"} now produces a single
	value '"foo,bar"' and not two values ('"foo' and 'bar"') as before.

	Backslash can be used to quote a literal comma or (unbalanced) paren,
	bracket or brace. Backslash is also recognized inside string literals
	as a means of escaping double-quote characters in the string.
	The tokenizer removes one level of backslashes, except inside string
	literals where they remain untouched. For example, the following
	iteration variable
	    ${var = 3, uniform(5,10), "}", {a,b}, foo\,bar, a\\b, "\"}",  "\\a"}
	will produce the following values:
 	    3
	    uniform(5,10)
	    "}"
	    {a,b}
	    foo,bar
	    a\b
	    "\"}"
	    "\\a"

2011-02-21  Tamas Borbely

	* Ini files: checked in multiple inheritance support for sections.
	Syntax: extends=Base1,Base2,Base3. The implementation uses the C3
	lineratization algorithm to determine section fallback order,
	see e.g. http://en.wikipedia.org/wiki/C3_linearization.
	If you are unsure, use the new "-X <configname>" command-line option
	that prints the fallback order of the given section for you.

2011-02-03  Levente Meszaros

	* ev.moduleCreated() is now called from the simkernel before the
	gateCreated() calls. (Eventlog readers prefer to see the "module
	created" line in the file before the "gate created" lines for
	the module's gates)

2011-02-01  Levente Meszaros

	* Eventlogmgr: properly support eventlog recording on/off even when
	restarting simulations:
	- Previous eventlog file is removed if no eventlog output is written.
	- Envir handles eventlogmgr similarly to other managers (as much as possible)
	- The eventlogmgr object is reused between runs.
	- Fixed writing the simulation initialization entries twice.
	- Corrected event log wording.

2010-01-27  Tamas Borbely

	* Ini file: fix for bug #214: bogus recursion test for ini file inclusion

2010-07-19  Levente Meszaros

	* Eventlog: fix for bug #187: turning on eventlog recording crashes
	the simulation when an activity() module is present

2010-06-11  ------ omnetpp-4.1 released ------

2010-05-31  ------ omnetpp-4.1rc2 released ------

2010-05-28  Levente Meszaros

	* Ini file inclusion now behaves as textual substition: if an included
	ini file does not contain [General] or [Config XXX] lines, the file's
	content will be treated as if copy/pasted into the section containing
	the include. Ini files that do not start with a section heading will
	now be accepted and treated as if they started with [General].
	Rationale: allow factoring out orthogonal pieces of config into
	separate files.

2010-04-26  Andras Varga

	* ValueIterator: fix bug #115: "1..4 step 0.1" went only up to 3.9
	not 4, due to floating-point rounding error.

2010-04-20  ------ omnetpp-4.1b4 released ------

2010-04-14  Andras Varga

	* implemented "-h neddecls" option; it prints built-in NED declarations

2010-04-08  Andras Varga

	* result-recording-mode renamed to result-recording-modes=

	* in the record= list of @statistic, now you can make items optional
	by appending "?" to them. By default, only non-optional items
	are used

	* result-recording-modes has changed: there are two keywords that
	are accepted in the list: "all" and "default". "all" copies all items
	from record= of @statistic() including optional ones (those suffixed
	with "?"), and "default" copies only non-optional ones. "default" is
	the default setting; it is also implied if result-recording-modes
	starts with '+'  or '-'. A lone '-' disables all recording modes.
	Examples:
	**.result-recording-modes = default  --> the default setting
	**.result-recording-modes = all      --> includes '?' items too
	**.result-recording-modes = -        --> disable all
	**.result-recording-modes = mean     --> only mean (disables 'default')
	**.result-recording-modes = default,-vector,+histogram
	**.result-recording-modes = -vector,+histogram   --> same as above
	**.result-recording-modes = all,-vector,+histogram

2010-03-14  ------ omnetpp-4.1b3 released ------

2010-03-10  Andras Varga

	* integrated statistics recording code (@statistic property)

	* new configuration options: debug-statistics-recording,
	result-recording-mode

	* new command-line options: -h resultfilters, -h resultrecorders

2010-02-03  Andras Varga

	* renamed "vector-recording-interval" configuration option to
	"vector-recording-intervals" (plural), to be consistent with
	eventlog-recoding-intervals.

2010-01-31  Andras Varga

	* checked in signals-based result recording; see the User Manual for more
	info. New configuration options: warmup-period,  **.result-recording-mode

2009-05-13  Levente Meszaros

	* changed EnvirBase to include hostname and pid by default in output file
	  names when parallel simulation is enabled.

	* bugfix: insert hostname and pid into before default file extension instead
	  of appending it at the end.

2009-03-12  ------ omnetpp-4.0 released ------

2009-02-27  ------ omnetpp-4.0rc2 released ------

2009-02-21  Andras Varga

	* on the command-line, accept per-object configuration options, also
	without object name pattern. Thus, both of the following are accepted,
	and are equivalent:
	    opp_run --**.vector-recording=false
	    opp_run --vector-recording=false

	* bugfixes: --repeat and --constraint command-line options were ignored
	when using -x option ("dump scenarios generated from config")

2009-02-20  Andras Varga

	* refactoring around EnvirBase initialization and running

2008-12-12  ------ omnetpp-4.0rc1 released ------

2008-12-03  Andras Varga

	* output scalar manager: also record iteration variables that look like
	numbers with units, e.g. 100s (previously it only recorded pure numbers)

2008-11-26  Andras Varga

	* library renamed to oppenvir

2008-02-23  Andras Varga

	Summary of changes for omnetpp-4.0 (2006..2008):

	Command line changes:

	* "-f" option is now optional when specifying an inifile on the command
	line (i.e. both "runsim omnetpp.ini" and "runsim -f omnetpp.ini" are
	accepted). Like previously, more than one ini files can be specified.

	Inifile syntax change:

	* configuration handling rewritten...
	* iterators, etc

	Configuration options:

	* output vector configuration: more than one recording intervals
	can now be given, separated by comma

	* output scalar file gets OVERWRITTEN in each run (not appended to it);
	there is an inifile option to the restore old behaviour

	* output-scalar-file-append=

	* experiment-label   "${configname}"
	* measurement-label  "${iterationvars}"
	* replication-label  "#${repetition}, seedset=@"

	* output-vector-file now defaults to: "${resultdir}/${configname}-${runnumber}.vec"
	* output-scalar-file now defaults to: "${resultdir}/${configname}-${runnumber}.sca"

	* **.enable-recording=
	* **.record-event-numbers=
	* **.recording-interval=
	* **.record-scalar=  -- enable/disable recording scalars and/or their individual members (for cStatistic)
	   ^^^ changed, see below:
	      **.record-module-events = <bool>  ==> module-eventlog-recording
	      **.record-event-numbers = <bool>  ==> vector-record-eventnumbers
	      **.enable-recording = <bool>      ==> vector-recording
	      **.recording-interval = <custom>  ==> vector-recording-interval
	      **.max-buffered-samples = <int>   ==> vector-max-buffered-values
	      **.save-as-scalar = <bool>        ==> param-record-as-scalar
	      **.record-scalar = <bool>         ==> scalar-recording

	* indexed outputvector file manager

	* perform-gc was removed, but it can be turned back on per module,
	from C++ code (setPerformFinalGC(true))

	* simtime-scale
	* ned-path, NEDPATH
	* fingerprint
	* seed-set
	* record-eventlog
	* eventlog-file
	* eventlog-message-detail-pattern
	* result-dir

	* args.cc/h rewritten ("--" can be used to mark end of options, etc...)

	* inifile entries are now checked against a database of recognized
	options, and unrecognized options (typo, etc) are reported as
	errors instead of failing silently

	* added "-h config", "-h classes", etc command-line option, which prints
	out available config file options, registered classes etc.

	* opp_run program added -- this is an empty simulation executable,
	which can be used to run simulation models that have been compiled
	into a shared library (dll or shared object).

	* out-of-directory build, and other Makefile changes

	Scalar file format change: when a cStatistic is recorded as a scalar, the
	values will be recorded with the following names: (before, the names
	contained dot instead of colon):
	  "<objectname>:count"   (was "samples")
	  "<objectname>:mean"
	  "<objectname>:stddev"
	  "<objectname>:min"
	  "<objectname>:max"

	* parsim: the behavior of the <pattern>.partition-id inifile entries changed

	TODO add the following info to the manual:

	With the new code, you'd normally set up partitioning like this:
	  - specify a concrete partition-id for compound modules which will be,
	    in whole, on one partition
	  - there's no need to specify anything for its submodules
	  - for compound modules that have parts on more than one partition, list
	    all those partitions in the partition-id string (e.g: 0,1,2); this is
	    necessary because if a compound module is marked as belonging to
	    some partition X, it will be created as "placeholder" on all other
	    partitions, and no attempt will be made to create submodules in it.
	  - "*" is a synonym for "all partitions"

	For example, if there's a network which consists of 2 subnets (subnet1, subnet2),
	and within the subnets you have 100 hosts, and you'd like to run it in 4 partitions,
	the setup could look like this:

	  Net.subnet1.partition-id = *  # or 0,1,2,3; or 0-3
	  Net.subnet2.partition-id = *
	  Net.subnet1.host[0..49].partition-id = 0
	  Net.subnet1.host[50..99].partition-id = 1
	  Net.subnet2.host[0..49].partition-id = 2
	  Net.subnet2.host[50..99].partition-id = 3

	No need to specify anything for the "tcp", "ip" etc submodules of hosts,
	because they inherit the setting from their parent compound modules.

2007-02-01 Tamas Borbely

	* new [General] config options:
	    output-vectors-memory-limit: the maximum memory allocated for the buffers by
	                                 cIndexedFileOutputVectorManager (default is 16M)
	    record-event-numbers: if true, event numbers are written into the vector file
	                          (default is true)
	    max-buffered-samples: number of samples collected in the memory before written
	                          to the disk (cIndexedFileOutputVectorManager only).
	                          When not given, the buffers grows as necessary and written
	                          to the disk when the global memory limit is exceeded or at the
	                          end of the simulation.

2006-09-30  Andras Varga

	* filemgrs.cc: default precision changed to 14

2006-10-21  ------ omnetpp-3.3 released ------

2006-09-13  Andras Varga

	* fix: the simulation can now be in a directory whose path name
	contains spaces (e.g. "Program Files" or "OMNEST Demo")

	* cInifile::getAsFilenames() enhancement (as part of the above fix):
	if directory name contains spaces, quotes are used to escape it.

	* cinifile.cc/h: added getAsFilename()

2006-06-26  Andras Varga

	* cinifile.cc: clearContents() made public.

2006-03-19  Andras Varga

	* omnetapp.cc: optimized checkTimeLimits() to call gettimeofday() less
	frequently.

2006-02-27  Andras Varga

	* cenvir.cc: implemented getParsimProcId() and getParsimNumPartitions()

2006-02-06  Andras Varga

	* envir.cc: undisposedObject() to print warning if it's called after
	shutdown (when app==NULL). Source of such call is the destructor of
	the global cDefaultList. Typically only global variables go to
	that list, and we strongly disapprove global vars.

2006-01-12  ------ omnetpp-3.2p1 released ------

2005-10-19  ------ omnetpp-3.2 released ------

2005-09-22  Andras Varga

	* implemented @@listfile in the preload-ned-files option.
	See nedc/ChangeLog for more info.

2005-09-12  Andras Varga

	* cenvir.cc, omnetapp.cc/h: default of "perform-gc" option changed to
	false. USER-ALLOCATED OBJECTS ARE NO LONGER DELETED AT NETWORK CLEANUP.

	* new option:
	    [General]
	    print-undisposed=<bool>, default=true
	Selects whether the list of undisposed user objects is dumped at
	network cleanup (provided perform-gc=false). Ideally, users should
	fix simple module destructors instead of turning this option off.

	* filemgrs.cc/h: added new omnetpp.ini settings to adjust number
	of significant digits recorded into output vector and output scalar
	files:
	    [General]
	    output-scalar-precision=<int>,  default=12
	    output-vector-precision=<int>,  default=12
	The default precision is 12 digits. The following has to be considered
	when changing the default value:

	IEEE-754 doubles are 64-bit numbers. The mantissa is 52 bits, which
	is roughly equivalent to 16 decimal places (52*log(2)/log(10)).
	However, due to rounding errors (see program below), usually only
	12..14 digits are correct, and the rest is pretty much random garbage
	which should be ignored. However, when you convert the decimal
	representation back into an IEEE-754 double (as in Plove and Scalars),
	an additional small error will occurs because 0.1 (0.01, etc) cannot be
	represented precisely in binary. This error of converting to/from
	decimal (text) format is usually smaller than the one that the double
	variable already had before recording it into the file, however if
	it is important you can eliminate it by setting >16 digits precision
	for the file (but again, be aware that the last digits are garbage).

	OMNeT++ internally uses the "%g" format of C's printf(), specifically
	"%.*g". The precision specified in omnetpp.ini simply goes in there.
	The upper limit of precision seems to be 17 digits (setting it higher
	doesn't make any difference in the output).

	To see finite machine precision and rounding errors, try this code:
	    double x = 0.1;
	    while (true)  {
	       printf("%.15g\n", x);
	       x = x + 0.1;
	    }

	The following, more advanced version will also print the error of
	converting back from text to double:
	    double x = 0.1;
	    while (true) {
	        char line[120];
	        sprintf(line, "%.15g \t%.14g \t%.13g \t%.12g", x, x, x, x);
	        double x15, x14, x13, x12;
	        sscanf(line, "%lg%lg%lg%lg", &x15, &x14, &x13, &x12);
	        printf("%s \t| %g  %g  %g  %g\n", line, (x15-x), (x14-x), (x13-x), (x12-x));
	        x = x + 0.1;
	    }

	For the complexity of the issue, see "What Every Computer Scientist
	Should Know About Floating-Point Arithmetic" by David Goldberg.

2005-08-08  Andras Varga

	* omnetapp.cc: make use of ModNameParamResolver in getXMLDocument().
	This will allow parameters like $MODULE_FULLPATH, $MODULE_INDEX etc
	to be used in XPath expressions (see doc of ModNameParamResolver
	for the full list)

2005-07-24  Andras Varga

	* filemgrs.h/cc: implemented newly added flush() virtual function to
	cFileOutputVectorManager and cFileOutputScalarManager classes

2005-07-07  Andras Varga

	omnetapp.cc: fix: ev.getUniqueNumber() produced garbage if it was
	called from module constructors (its initialization took place too
	late).

2005-05-01  Andras Varga

	* omnetapp.cc: added [General]/perform-gc omnetpp.ini option
	(default=true). If turned off, sim.kernel doesn't do garbage
	collection when deleting the network.

2005-04-05  Andras Varga

	* cinifile.cc: fix: getAsFilenames() crashed if ini file entry is was ""
	[reported by Tom Parker]

	* filemgrs.cc: throw error when output vector file from previous run
	cannot be removed

2005-03-31  ------ omnetpp-3.1 released ------

2005-03-22  Andras Varga

	* omnetapp.cc/h, cenvir.cc: cEnvir::getParameter() return type changed
	from const char * to std::string. This was needed because if the
	parameter value contains the xmldoc() function, getParameter() will
	now modify the file name in it to make it relative to the
	position of the ini file the setting was read from.

	* omnetapp.cc/h: handling of -h option moved into TOmnetApp base class.

2005-03-21  Andras Varga

	* omnetapp.cc: fixed memory leak in shutdown code: RNG objects
	didn't get freed in TOmnetApp destructor. [discovered and patch
	provided by Nigel Sheridan-Smith]

2005-03-18  Andras Varga

	* cinifile.h/cc: implemented getAsFilenames(), getBaseDirectoryFor(),
	getLocation() functions in cInifile: the class now remembers from which
	ini file every entry was read from. Also, class was upgraded to use
	std::vector.

	* the following configuration settings (due to the use of cfg->getAs-
	FileNames() instead of cfg->getAsString()) now became relative to the
	location of the ini file which contains them:
	  [General], load-libs=
	  [Cmdenv], output-file=
	  [Tkenv], bitmap-path=
	  [General], preload-ned-files=
	  [General] or [Run X], output-vector-file=
	  [General] or [Run X], output-scalar-file=
	  [General] or [Run X], snapshot-file=

2005-03-02  Andras Varga

	* omnetapp.cc: fix: RNGs were initialized with run number of the
	previous run

	* omnetapp.h/cc: makeOptionsEffective() merged into readPerRunOptions()

	* omnetapp.cc: fixed ini file imports: included ini file names are now
	understood as relative to the location of the ini file containing the
	"include" directive, rather than to the current working directory.
	E.g. if your omnetpp.ini contains "include ../../settings.ini", then
	settings.ini may now contain "include defaults.ini" (instead of
	"include ../../defaults.ini") to load defaults.ini from the same
	directory.

2005-02-24  Andras Varga

	* cenvir.cc: fix: simple modules etc in dynamically loaded dlls/so's
	([General]/load-libs=, -l command-line option) didn't get registered

2005-02-18  Andras Varga

	* cenvir.cc: ev.printf() fixed: it printed the buffer pointer value
	instead of the string itself. (char buf[20]; strcpy(buf,"hello");
	cout << buf; prints buf's address not "hello"!!!)

	* cenvir.cc: fixed crash caused by writing one char past the
	end of char buffer[1024] in cEnvir::gets().

2005-02-07  Andras Varga

	* cakaroarng.cc: fix: added missing #include

	* cinifile.cc: fix in cInifile::getEntriesWithPrefix(): first check
	for double (overlapping) entries, and make the first one win. This
	fixes wrong priorities of rng mapping entries. [reported by Georg Lutz]

2005-01-10  Andras Varga

	* factored out platform dependencies to include/platdep

2005-01-03  Andras Varga

	* omnetapp.cc: scheduler's startRun() and endRun() methods didn't
	get called

2004-12-29  ------ omnetpp-3.0 released ------

2004-12-16  Andras Varga

	* optimizations

	* removed ev.getDisplayString() and support for display strings in
	omnetpp.ini (section [DisplayStrings])

2004-12-10  Andras Varga

	* omnetapp.cc/.h: implemented getUniqueNumber()

2004-12-08  Andras Varga

	* omnetapp.cc/h, cenvir.cc: added ev.getParameterUseDefault() function.
	New ini file option:
	  <paramname>.use-default = yes
	If set, the given module parameter(s) will use the defaults specified
	in the NED file via the input() operator.

2004-11-29  Andras Varga

  	* on Mac OS/X, implement ftime() with gettimeofday() [patch from
  	Michael Tuexen]

  	* platdep.cc: load-libs= omnetpp.ini option now adds plaform-specific
  	extension (.dll or .so) to library name

2004-11-23  ------ omnetpp-3.0b1 released ------

2004-11-03  ------ omnetpp-3.0a9 released ------

2004-10-31  Andras Varga

	* omnetapp.cc: RNG mapping implemented. New ini file entries:
	  [General]
	  <modulepath>.rng-N=M  (where N,M are numeric, M<num-rngs)
	This maps module-local RNG N to physical RNG M. The following
	example maps all "gen" module's default (N=0) RNG to physical RNG 1,
	and all "noisychannel" module's default (N=0) RNG to physical RNG 2.
	  [General]
	  num-rngs=3
	  **.gen[*].rng-0=1
	  **.noisychannel[*].rng-0=2
	This mapping allows variance reduction techniques to be applied to
	OMNeT++ models, without any model change or recompilation.

	* cinifile.cc/h, patmatch.cc/h: added stuff needed for RNG mapping:
	getEntriesWithPrefix(), patternPrefixMatches()

2004-10-28  Andras Varga

	* added cakaroarng.h/cc. Akaroa's RNG has some limitations, see class
	doc for details.

2004-10-27  Andras Varga

	* omnetapp.h/cc, cenvir.cc: added numRNGs(), rng(k) functions (see
	include/ChangeLog)

	* omnetapp.cc: new omnetpp.ini entries:
	  [General]
	  num-rngs=n  (default:1)
	  rng-class="classname"  (default:cMersenneTwister)
	classes accepted: "cMersenneTwister", "cLCG32"
	per-run settings:
	  [General] or [Run n]
	  seed-N-mt=seedvalue  (for MT; default: auto seed selection)
	  seed-N-lcg32=seedvalue  (for cLCG32; default: auto seed selection)
	N can be 0..num-rngs; see sim/cmersennetwister.cc and clcg32.cc for
	exact auto-seeding procedure

2004-10-25  Andras Varga

	* updated for fullPath() signature change (see include/ChangeLog)

2004-10-04  ------ omnetpp-3.0a8 released ------

2004-09-24  ------ omnetpp-3.0a7 released ------

2004-07-22  ------ omnetpp-3.0a6 released ------

2004-07-06   Andras Varga

	* speedmtr.cc/h: fix: use wall clock time (ftime() call) instead of
	time consumed by the process (clock()) for the ev/sec, simsec/sec
	calculations.

2004-07-05   Andras Varga

	* cenvir.cc,omnetapp.cc/h,filemgrs.cc/h: recordScalar() functions for
	text and cStatistic data removed. (See also include/ChangeLog)

2004-06-22   Andras Varga

	* cenvir.cc, omnetapp.cc/h: added new cEnvir method getXMLDocument().
	* added cxmldoccache.cc/h: contains cXMLDocCache class which reads and
	caches XML config files

2004-06-21   Andras Varga

	* patmatch.cc/h: replaced old transform_pattern() and stringmatch()
	methods with shiny new pattern matching class. cPatternMatcher can do
	case sensitive/insensitive, full string/substring match, and supports
	more pattern features, namely: numeric ranges and distinction between
	"*" and "**". See class documentation for more info

	* inifile.cc/h: cPatternMatcher used as the engine for wildcard
	resolution in ini files. The default mode is "dottedpath on",
	where "*" does NOT match dot ".", so oddities like "foo[*].param"
	matching "foo[1].bar[5].param" will not occur any more. The new
	wildcard "**" will match anything.
	   This change is (of course) NOT backward compatible, so existing
	omnetpp.ini's have to be updated. In practice, every line which begins
	with "*." should be changed to begin with "**." -- that'll do most
	of the time, further tweaking is rarely necessary.
	   In any case: if you still want to run the old omnetpp.ini (e.g. to
	check the new one against it), you can add the line
	         #% old-wildcards
	at the top of (each) old ini file. This will switch back to the old
	behaviour. "#% old-wildcards" is provided to make it easier to migrate
	from OMNeT++ 2.3 to 3.0, and will be removed in some future version.

2004-06-17   Andras Varga

	* cinifile.cc/h: cInifile is now subclassed from cConfiguration
	(see include/ChangeLog). Class interface slightly changed.

	* cenvir.cc: added new ini file option:
	  [General]
	  configuration-class=...
	This makes it possible to use other data source than omnetpp.ini (or
	in general, ini files) for configuration. E.g. it is possible to use
	XML or database input.
	The startup sequence is this (see cEnvir::setup()):
	  1. First, omnetpp.ini (or the ini file(s) specified via the "-f"
	     command-line option) is read.
	  2. Shared libraries in [General]/load-libs are loaded. (Also the
	     ones specified with the "-l" command-line option.)
	  3. [General]/configuration-class is examined, and if it's present,
	     and a configuration object of the given class is instantiated.
	     The configuration object may read further entries from the
	     ini file (e.g. database connect parameters, or XML file name).
	  4. The original omnetpp.ini config object is deleted. No other
	     settings are taken from it.
	  5. [General]/load-libs from the new configuration object is
	     processed.
	  6. Then everything goes on as normal, using the new config object.

2004-06-07  ------ omnetpp-3.0a5 released ------

2004-05-15  ------ omnetpp-3.0a4 released ------

2004-03-26  Andras Varga

	* filemgrs.h: (patch from Johnny Lai  <johnny.lai@eng.monash.edu.au>):
	made sVectorData protected (it was private)

2004-03-22  ------ omnetpp-3.0a3 released ------

2004-03-10  Andras Varga

	* cenvir.cc: updated to reflect changes in cenvir.h (see include/
	ChangeLog)

	* omnetapp.h: puts(const char *) replaced by sputn(const char *, int n)

2004-03-03  ------ omnetpp-3.0a2 released ------

2004-02-23  Andras Varga

	* omnetpp.cc/h, cenvir.cc: added moduleReparented() cEnvir method

2004-02-22  Andras Varga

	* added fsutils.cc/h; implemented wildcards in list files

2004-02-10  Andras Varga

	* omnetapp.cc: error messages to display module class name (NED type)
	of current module

2004-02-09  Andras Varga

	* omnetapp.cc/h: preload-ned-files= omnetpp.ini option now supports
	list files (@nedfiles.lst), even recursive ones (list files may refer
	to other list files). Relative or absolute file name paths are also
	allowed in list files; relative paths are relative from the location
	of the list file.

2004-02-04  ------ omnetpp-3.0pre1 released ------

2004-01-09  Andras Varga

	* cenvir.cc, omnetapp.h: added bubble()

2004-01-06  Andras Varga

	* cenvir.cc, omnetapp.h: added isGUI()

2004-01-01  Andras Varga

	* omnetapp.cc/h, cenvir.cc: handle new cEnvir notifications:
	moduleCreated(), moduleDeleted(), connectionCreated(),
	connectionRemoved(), displayStringChanged(cGate*),
	displayStringChanged(cModule*),	displayStringAsParentChanged()

2003-12-11  Andras Varga

	* all files: follow changes in sim/; C-style casts replaced with
	static_cast<>

2003-11-13  Andras Varga

	* Checked in parallel simulation code that was developed March-May 2003,
	during my stay at Monash University. Changes:

	2003-05-12  Andras Varga
	* speedmtr.cc: changed so that if measurement interval (clocks) or
	number of events are small, it refuses to give results (ie. returns
	all zeroes). I had some weird readings other before that...

	2003-04-18  Andras Varga
	* omnetapp.cc: fname-append-host setting now also appends pid (process
	id) to the file names

	2003-03-31  Andras Varga
	* omnetapp.cc/h: parallel simulation ini file options changed.
	New options, with their default values:
	  [General]
	  scheduler-class="cSequentialScheduler" (only used when par-sim=false)
	  parallel-simulation=false
	  parsim-communications-class="cFileCommunications"
	  parsim-syncronization-class= "cNullMessageProtocol"
	Old, obsoleted options:
	  [General]
	  distributed=...
	  parallel-system=...

	2003-03-23  Andras Varga
	* omnetapp.cc: install scheduler into 'simulation' object on startup --
	see comments in include/ChangeLog about cScheduler

2003-11-09  Andras Varga

	* omnetapp.cc: added support for dynamic loading of NED files.
	The new [General]/preload-ned-files= omnetpp.ini entry may contain
	a list of NED file names, separated by spaces. The NED files will
	be loaded before the user interface is started.

2003-10-02  Andras Varga

	* cenvir.cc, omnetapp.h: added new method cEnvir::moduleMethodCalled(),
	needed for animation of method calls between modules

2003-09-22  Andras Varga

	* omnetapp.cc, cenvir.cc: messageSent() signature change, see
	include/ChangeLog

2003-06-16  ------ omnetpp-2.3 released ------

2003-03-15  ------ omnetpp-2.3b2 released ------

2003-03-15  Andras Varga

	* cinifile.cc/h: bugfix: complained about unterminated last line

2003-03-04  Andras Varga

	* cinifile.cc/h: made it faster to process large ini files (added
	haswildcard field)

2003-02-15  ------ omnetpp-2.3b1 released ------

2003-02-14  Andras Varga

	* cinifile.cc: improved handling of lines ~ 1024 chars

2003-01-07  Andras Varga

	* implemented ev.flush()

2002-10-20  Andras Varga

	* misc improvements

2002-10-07  Andras Varga

	* main.cc: added call to ExecuteOnStartup::executeAll().
	See new EXECUTE_ON_STARTUP() macro in include/ChangeLog.

2002-10-04  Andras Varga

	* error handling changed from simulation.ok() to exceptions.

2002-09-21  Andras Varga

	* filemgrs.cc, akoutvectormgr.cc: applied Steffen Sroka's patches
	(thanks Steffen!). AKAROA_CFLAGS added to Makefile.in.

2002-07-08  Andras Varga

	* filemgrs.cc: added fname-append-host=true/false ini file setting.
	When turned on, appends the host name to the names of the output
	files (output vector, output scalar, snapshot files). This is
	useful when the simulation is run on multiple machines concurrently
	(parallel independent runs (Akaroa) or parallel/distributed simulation),
	and all running instances write to the same directory (e.g. shared
	via NFS mount). [Idea from Steffen Sroka's Akaroa extension]

	* added akoutvectormgr.h/cc: integrated Steffen Sroka's Akaroa
	extension that supports multiple independent replicated simulation runs.
	Akaroa can be activated by specifying
	  [General]
	  outputvectormanager-class=cAkOutputVectorManager
	in the ini file. By default, all output vectors are under Akaroa
	control; the <modulename>.<vectorname>.akaroa=false setting can be used
	to make Akaroa ignore specific vectors.
	For more info see the Akaroa home page and the OMNeT++ documentation.

	TBD: Akaroa integration into the makefiles; documentation

2002-06-13  Andras Varga

	* filemgrs.cc: 2 bugfixes: (1) output scalar file did not get opened
	sometimes; (2) output scalar file got removed between runs

2002-05-28  Frank Paehlke  <paehlke@tm.uni-karlsruhe.de>

	* filemgrs.cc: Use standard headers and namespaces if
	USE_STD_NAMESPACES is defined

2002-05-16  Ulrich Kaage  <kaage@int.uni-karlsruhe.de>

	* appreg.h (cOmnetAppRegistration): fixed declaration of className()

2002-05-04  ------ omnetpp-2.2 released ------

2002-03-11  Uli Kaage  <kaage@int.uni-karlsruhe.de>

	* filemgrs.cc (initVector): make sure that vp->name is not
	NULL. This would cause a crash on SUN Solaris
	(recordScalar): make sure name is not null

2002-03-03  Andras Varga

	* filemgrs.cc: increased precision of numbers in output vector files
	("%g" fprintf formats changed to "%.9g"). [suggested by George Young]

2002-03-03  Andras Varga

	* Various changes: management of output vectors, output scalars and
	snapshots were moved into to the user interface library. See following
	entries and include/ChangeLog.

	* cenvir.cc: implementation of new cEnvir methods (just forward calls
	to TOmnetApp.)

	* omnetapp.h/cc: new methods; plugin mechanism: cOutputVectorManager,
	cOutputScalarManager, cSnapshotManager. (see new file include/envirext.h)

	* ini file entries no longer supported: [General]/log-parchanges,
	[General]/parchange-file. (Parameter change logging no longer
	supported, see include/ChangeLog).

	* new ini file entries: [General]/outputvectormanager-class,
	outputscalarmanager-class, snapshotmanager-class. They specify the name
	of the output vector manager, etc class to be plugged into Envir.
	The classes must have been registered with Register_Class().
	The default values are cFileOutputVectorManager, cFileOutputScalarManager,
	cFileSnapshotManager.

	* filemgrs.h/cc: new files: implementation if plugin classes:
	cFileOutputVectorManager, cFileOutputScalarManager, cFileSnapshotManager

	* cenvir.cc: bugfix: TOmnetApp::shutdown() was never called from cEnvir.

2002-02-24  Andras Varga

	* exit with status 0 if simulation terminated normally (as determined
	by simulation.normalTermination), otherwise with status 1.

2002-02-14  Ulrich Kaage  <kaage@int.uni-karlsruhe.de>

	* omnetapp.cc (putmsg): Bugfix: if OMNeT++ dies shortly after a
	call to putmsg (e.g. SIGSEGV), the output might not be written
	(especially when redirecting to a file). A call to ::fflush()
	ensures that the stdout buffer is emptied.

2001-10-04 Andras Varga

	* cinifile.h, cinifile.cc: no more upper limit on size of ini file
	(tables are dynamically reallocated if needed)

2001-09-01 Andras Varga

	* CONST_CAST() replaced by const_cast<>()

2001-07-11 Andras Varga

	* omnetapp.cc omnetapp.h: Eric Wu's Tru64/MPI port.
	Added new ini file option: [General]/parallel-system=. Its value
	can be "PVM" or "MPI", defaults to "MPI".

2001-02-27  Andras Varga

	* ------ omnetpp-2.1 released ------

	* Borland C++ support removed: I deleted the project files
	(*.ide). I added equivalent Makefile.bc files (generated from the
	BC IDE), but they are completely unsupported at the moment. If
	there's interest, it's possible that later I'll add makefiles for
	the free command-line bc5.5 compiler.

	* ------ omnetpp-2.0p1 released ------

	* patch to prevent Unix linkers (falsely) report Speedometer as
	missing symbol

2001-02-06  Andras Varga

	* ------ omnetpp-2.0 released ------

	* added dllexport to Speedometer

2001-01-16  Andras Varga

	* added Speedometer class

2000-06-19  Andras Varga

	* bugfix: TOmnetApp::getOutVectorConfig() crashed when it was
	called with vecname being NULL (on Solaris; other systems seem to
	tolerate NULL being passed to sprintf() as a "%s" argument)
	[reported by Ulrich Kaage]

2000-05-07  Andras Varga

	* ------ omnetpp-2.0b5 released ------

	* ------ omnetpp-2.0b4 released ------

	* Makefile.vc improvements from Balazs Kelemen

2000-04-10  Andras Varga

	* TRUE/FALSE (defines) replaced by true/false (C++ keywords)

	* in printf() statements, all "%lf","%lg","%le" was replaced by
	"%f","%g","%e"

2000-04-10  Andras Varga (6-10)

	* changes to enable linking a Windows DLL from the library

	* the memoryIsLow() utility function was placed into this library,
	and now it works through a new TOmnetApp::memoryIsLow() function.

	* the "-u <user-interface>" command-line parameter is now
	understood by envir: this can be used to select the user interface
	if both Cmnenv and Tkenv is linked in (or is dynamically loaded).

	The [General]/user-interface= ini file option was also added, with
	the same functionality.

	This allows the user to link the simulation without Cmdenv and
	Tkenv, and load one of them at runtime, with a line like this in
	omnetpp.ini:

		[General]
	         load-libs=../../lib/tkenv.so
	         user-interface=Tkenv
	Or the command-line equivalent:

		mysim  -l ../../lib/tkenv.so  -u Tkenv

	To allow all the above, the setup procedure (cEnvir::setup()) and
	the constructor and the setup() function of TOmnetApp was
	reorganized.

2000-04-04  Andras Varga

	* dynamic registration of user interface (TOmnetApp) classes
	introduced.
	(The formerly used method didn't make it possible to create
	separate DLLs on Windows: envir.dll, tkenv.dll, cmdenv.dll).

	See appreg.h, the Register_OmnetApp macros in cmdenv.cc and
	tkapp.cc, and the chooseBestOmnetApp() function in envir.cc.

2000-03-26  Andras Varga

	* 'char *' pointers made const-correct (lots of 'char *' -->
	'const char *' replacements throughout the code)

2000-01-28  Andras Varga

	* ------ omnetpp-2.0b3 released ------

	* main stack size increased to 128K (omnetapp.cc)

2000-01-16  Andras Varga

	* improvements in cinifile.cc

2000-01-15  Andras Varga

	* MSDOS #defines removed from the code (omnetapp.cc)

2000-01-09  Andras Varga

	* bugfix: TOmnetApp's destructor made virtual

1999-12-05  Andras Varga

	* Makefile.vc added

1999-12-04  Andras Varga

	* first compile with MSVC. Minor changes: changed int to bool in
	some places

1999-09-20  Andras Varga

	* ------ omnetpp-2.0b2 released ------

	* typo fixed in Makefile.in: $(CLFAGS) --> $(CFLAGS)

1999-08-30  Andras Varga

	* ------ omnetpp-2.0b released ------

	* Fixed a bug in omnetapp.cc which caused bogus reporting in the
	number of random number generators initialized from table and from
	ini file

1999-08-13  Andras Varga

	* cIniFile::readFile()'s include file handling modified. Now the
	included file doesn't need to start with a section header line:
	entries will use the current section header in the including file.
	BUT: section headers in the included file are not propagated back
	to the including file because it could lead to nasty behaviour.

1999-06-21  Andras Varga

	* all sources checked in under CVS

	* makefile.in modified for use with GNU Autoconf; also renamed to
	Makefile.in

	* version.log renamed to ChangeLog

	* removed support for DOS with BC3.1

1999-02-09  Andras Varga

	* updated for sim174

1999-01-25  Andras Varga

	* updated for sim172d

1998-12-27  Andras Varga

	* fixed bug in inifile reader

	* DYNAMIC_LINKAGE config flag renamed to USE_DLOPEN

	* makefile renamed to makefile.in

	* runningModule() corrected to contextModule in slaveapp.cc

1998-08-17  Andras Varga

	* fixed a bug with output vector config

1998-08-17  Andras Varga

	* fixed a bug with output vector config

1998-08-14  Andras Varga

	* makefile fix

1998-08-12  Andras Varga

	* Borland C++ 5.0 project file added

	* cenvir.h move to sim/

	* small fixes

1998-07-24  Andras Varga

	* getDisplayString() added to cEnvir and TOmnetApp classes

	* display strings now can be taken from [DisplayStrings] or [Run
	nn] section of the ini file (hardcoded display strings take
	precendence over the ones in the ini file)

	* cIniFile edited -- getRaw() added

1998-07-20  Andras Varga

	Improved cIniFile: wildcards understood in keys; keys may contain
	whitespace Support for output vector configuration from ini file

	* getOutVectorConfig() added to cEnvir and TOmnetApp classes

	* output vector config is taken from [OutVectors] or [Run nn] section.

	  Syntax:
	    module.vectorname.enabled=yes/no
	    module.vectorname.interval=10s..30s
	  Output vectors are enabled by default.

1998-07-15  Andras Varga

	* small fixes

1998-07-10  Andras Varga

	* main stack size increased to 64K

	* new ini file option: [General]/load-libs=

1998-06-24  Andras Varga

	* modifications to cinifile.cc

	* return value of TOmnetApp::askYesNo changed from bool to int
	(-1==cancel)

	* other small fixes

1998-06-19  Andras Varga

	* call to simulation.setup() added to TOmnetApp.setup()

1998-06-18  Andras Varga

	* opt_inifile_name bug fixed

1998-06-09  Andras Varga

	* new ini file option: output-scalar-file= (in [General] or
	[Run-nn] section)
	(supported from sim162 up)

1998-05-20  Andras Varga

	* `ev << ..' conversions for doubles changed

1998-05-12  Andras Varga

	* bugfixes

1998-05-11  Andras Varga

	* multiple -f and -l options: several ini files and libraries can
	be loaded
	(If you want to do several simulation runs with their parameters
	in separate files, multiple -f will be very useful!)

	* ini files can include each other. Syntax:
	    ...
	    include second.ini
	    ...

	* wildcard parameters in ini files. Like:
	    [Parameters]
	    net.station[*].gen_rate=100
	  Wildcard characters are: * ?, and {} for range (using the conventional
	  [] would be very inconvenient because they would interfere with vector
	  indices).

1998-04-27  Andras Varga

	* new ini file option: [General] / total-stack-kb= Holds the total
	stack size (in KB) needed by module coroutines.

	* makefile can now create shared object (libenvir.so)

	* support for dynamic loading of libraries: -l command line
	option.  `foo -l ./token.so' (if `foo' is an OMNeT++ executable)
	will now load the token.so file at startup.

1998-03-26  Andras Varga

	* use of gets() eliminated

1998-02-15  Andras Varga

	* makefile made compatible with configure script;
	envir.a-->libenvir.a

1997-12-13  Andras Varga

	* for clarity, section name [All runs] changed to [Parameters]

1997-10-10  Andras Varga

	* added endl to cenvir.h. Example: ev << "Hello!" << endl;

1997-10-06  Andras Varga

	* further renaming; compatible with sim148

1997-10-02  Andras Varga

	* cleaned up & renamed several member functions; compatible with sim147

1997-08-17  Andras Varga

	* small bug in ini file reader fixed

	* readPerRunOptions(1) in TOmnetApp::setup() commented out

1997-08-17  Andras Varga

	* TOTAL_STACK increased to 2Mb

	* extrastack() support added

	* new ini file entry: [General]/netif-check-freq=  (default:1)

	* compatibility: sim146a

1997-08-08  Andras Varga

	* other [Slaves] options added that control whether different kinds of

	  textual messages should be routed to the console:
	     errmsgs-to-console=
	     infomsgs-to-console=
	     modmsgs-to-console=

	* updated for sim144c

1997-08-07  Andras Varga

	* omnetapp.cc: cNetSimpleMod corrected to cNetMod

	* compatibility: sim144a or later

1997-08-04  Andras Varga

	* fixed a bug with reporting how many rnd gens were initialized from table

	* [Slaves]/module-messages= flag added; works similarly to
	Cmdenv's.  Default value is NO: module messages from slaves do not
	appear on console.

1997-07-31  Andras Varga

	* a bug introduced in #96 fixed

	* [General]/number-of-runs= ini file setting was removed; its
	place is taken by [Cmdenv]/runs-to-execute=

	* added: cInifileSectionIterator

	* compatible with: cmdenv87 and up

1997-07-20  Andras Varga

	Ini file reader improved; '#' as well as ';' can be used for
	comments Improvements on distributed execution:

	* ini file options added to enable logging of messages produced by
	slaves:

	     [Slaves]
	     write-slavelog = true/false
	     slavelog-file = slave.log
	  Output between TSlaveApp creation and ini file processing is written in
	  the file "slave.log".

	* changed TOmnetApp::foreignputs()

1997-07-10  Andras Varga

	* makefile hacked upon to make it edible for Cygnus gcc

1997-07-06  Andras Varga

	* fixed a bug that caused segmentation fault if there was an error
	during system setup

1997-07-01  Andras Varga

	* printing tons of "genXX-seed=..." ini warnings suppressed

	* handling of boolean ini file entries improved

1997-06-27  Andras Varga

	* enable_modmsgs changed to disable_tracing

	* main stack enlarged from 16K to 32K (cenvir.cc)

1997-06-26  Andras Varga

	* enable_modmsgs flag added. If set to FALSE, makes ev.printf()
	and ev.puts() return immediately without doing anything.
	Motivation was to decrease overhead when running the simulation at
	full speed and module messages are not needed.

1997-04-22  Andras Varga

	* stepmode renamed to pause_in_sendmsg (compatibility: sim130 and above)

1997-04-11  Andras Varga

	* opt_helponly stuff (-h command-line option) moved to cmdenv package

1997-04-06  Andras Varga

	* cEnvir::messagedelivered() added

	* STARTUPERROR_MODE stuff added

	* compatible with: sim127

1997-04-01  Andras Varga

	* fmt of ini file warnings changed

1997-03-24  Andras Varga

	* file logging added to TSlaveApp ("slaveapp.log")

	* bugfixes

1997-03-21  Andras Varga

	* changes on PVM stuff. *** COMPATIBLE WITH SIM122 OR UP ***

	'-s' flag replaced with call to is_started_as_master() more error
	checks

	* copyright msg modified

1997-03-16  Andras Varga

	* Style of ini file [Machines] section changed from:

	    whale.hit.bme.hu = node1, node2
	    dolphin.hit.bme.hu = node3
	  to:
	    node1 = whale.hit.bme.hu
	    node2 = whale.hit.bme.hu
	    node3 = dolphin.hit.bme.hu

1997-03-15  Andras Varga

	* pvm stuff (cSlaveApp) modified

1997-03-10  Andras Varga

	* small modifications

1997-03-08  Andras Varga

1997-03-06  Andras Varga

	* gen1_seed=, gen2_seed= etc entries finished;

	* starting_seeds table added

	* TOmnetApp::setOptions() renamed to makeOptionsEffective()

1997-03-06  Andras Varga

	* new cInifile members: getAs..2()

	* better ini file warnings

	* gen1_seed=, gen2_seed= etc entries added; not complete

1997-02-28  Andras Varga

	* adopted to sim105 & 'multiple runs' bug fixed

	* ini file warning changed from ev.printfmsg() to ev.printf()

1996-12-01  Andras Varga

	 * fixed linker problem (undefined symbol
	 `TSlaveApp::TSlaveApp(...)'

	 * changed copyright message
