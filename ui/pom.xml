<project>
   <modelVersion>4.0.0</modelVersion>
   <groupId>org.omnetpp.ide</groupId>
   <artifactId>org.omnetpp.ide.root</artifactId>
   <version>6.1.0-SNAPSHOT</version>
   <packaging>pom</packaging>

   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <eclipse-repo.url>https://download.eclipse.org/releases/2024-12</eclipse-repo.url>
      <justj-repo.url>https://download.eclipse.org/justj/jres/21/updates/release/</justj-repo.url>
      <pydev-repo.url>https://github.com/fabioz/Pydev/releases/download/pydev_13_0_2/</pydev-repo.url>
   </properties>

   <repositories>
      <repository><id>main</id><url>${eclipse-repo.url}</url><layout>p2</layout></repository>
      <repository><id>justj</id><url>${justj-repo.url}</url><layout>p2</layout></repository>
      <repository><id>pydev</id><url>${pydev-repo.url}</url><layout>p2</layout></repository>
   </repositories>
   <build>
      <extensions>
         <extension>
           <groupId>org.eclipse.tycho</groupId>
           <artifactId>tycho-build</artifactId>
           <version>${tycho-version}</version>
         </extension>
      </extensions>

      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.eclipse.tycho</groupId>
               <artifactId>tycho-p2-director-plugin</artifactId>
               <version>${tycho-version}</version>
               <configuration>
                  <products>
                     <product><id>org.omnetpp.ide.${what}.product</id></product>
                  </products>
               </configuration>
            </plugin>
         </plugins>
      </pluginManagement>

      <plugins>
         <plugin>
         <groupId>org.eclipse.tycho</groupId>
         <artifactId>tycho-maven-plugin</artifactId>
         <version>${tycho-version}</version>
         <extensions>true</extensions>
         </plugin>

         <plugin>
            <groupId>org.eclipse.tycho</groupId>
            <artifactId>tycho-p2-repository-plugin</artifactId>
            <version>${tycho-version}</version>
            <configuration>
            <includeAllDependencies>true</includeAllDependencies>
            </configuration>
         </plugin>

         <!-- build for the following platforms -->
         <plugin>
         <groupId>org.eclipse.tycho</groupId>
         <artifactId>target-platform-configuration</artifactId>
         <version>${tycho-version}</version>
         <configuration>

            <!-- This magic is required because JustJ has an explicit negative requirement on 
                 execution environments while the rest of the build need an execution environment.
                 In a perfect world, 'executionEnvironment' would be set to 'none' 
                 and everything would work, but we are not living on that branch of the multiverse. -->    
            <!-- force JavaSE-21 environment. -->
            <executionEnvironment>JavaSE-21</executionEnvironment>
            <!-- disable the negative requirement of an exeutionEnvoronment on JustJ -->
            <dependency-resolution>
               <profileProperties>
                     <org.eclipse.justj.buildtime>true</org.eclipse.justj.buildtime>
               </profileProperties>
            </dependency-resolution>
<!--
            The other approach would be to completely disable the resolving of execution environemnts. (not recommended)
            <resolveWithExecutionEnvironmentConstraints>false</resolveWithExecutionEnvironmentConstraints>
-->

            <environments>
               <environment><os>linux</os><ws>gtk</ws><arch>x86_64</arch></environment>
               <environment><os>linux</os><ws>gtk</ws><arch>aarch64</arch></environment>
               <environment><os>win32</os><ws>win32</ws><arch>x86_64</arch></environment>
               <environment><os>macosx</os><ws>cocoa</ws><arch>x86_64</arch></environment>
               <environment><os>macosx</os><ws>cocoa</ws><arch>aarch64</arch></environment>
            </environments>
         </configuration>
         </plugin>

         <!-- enable source bundle generation -->
         <plugin>
            <groupId>org.eclipse.tycho</groupId>
            <artifactId>tycho-source-plugin</artifactId>
            <version>${tycho-version}</version>
            <executions>
               <execution>
                  <id>plugin-source</id>
                  <goals>
                     <goal>plugin-source</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <!-- Compiler configuration -->
         <plugin>
         <groupId>org.eclipse.tycho</groupId>
         <artifactId>tycho-compiler-plugin</artifactId>
         <version>${tycho-version}</version>
         <configuration>
            <compilerArgs></compilerArgs>
            <useProjectSettings>false</useProjectSettings>

            <!-- Java 21  -->
            <source>21</source>
            <target>21</target>
         </configuration>
         </plugin>
      </plugins>

   </build>

   <!-- profiles for OMNeT++ and OMNEST builds. Should deal with all differences between the builds -->
   <profiles>
      <profile>
      <id>omnetpp</id>
      <activation>
         <activeByDefault>true</activeByDefault>
      </activation>
      <build>
         <plugins>

            <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
               <execution>
                  <phase>process-sources</phase>
                  <configuration>
                  <target>
                     <replace dir="." token="##VERSION##" value="${VERSION}" />
                     <replace dir="." token="##BUILDID##" value="${BUILDID}" />
                     <!-- in org.omnetpp.common -->
                     <replace dir="." token="IS_COMMERCIAL = true;" value="IS_COMMERCIAL = false;">
                        <include name="**/*.java" />
                     </replace>
                  </target>
                  </configuration>
                  <goals>
                  <goal>run</goal>
                  </goals>
               </execution>
            </executions>
            </plugin>

         </plugins>
      </build>
      </profile>

      <profile>
      <id>omnest</id>
      <activation>
         <property>
            <name>what</name>
            <value>omnest</value>
         </property>
      </activation>
      <build>
         <plugins>

            <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
               <execution>
                  <phase>process-sources</phase>
                  <configuration>
                  <target>
                     <replace dir="." token="##VERSION##" value="${VERSION}" />
                     <replace dir="." token="##BUILDID##" value="${BUILDID}" />
                     <replace dir="." token= "intro-omnetpp.png" value="intro-omnest.png" >
                        <include name="plugin.xml" />
                     </replace>
                     <replace dir="." token= "OMNeT++" value="OMNEST" >
                        <include name="**/*.properties" />
                        <include name="**/*.java" />
                        <include name="**/*.htm" />
                        <include name="**/*.html" />
                        <include name="**/*.xml" />
                        <include name="META-INF/MANIFEST.MF" />
                     </replace>
                     <replace dir="." token="OMNEST/OMNEST" value="OMNeT++/OMNEST"> <!-- replace back as the previous replace could create OMNEST/OMNEST from the string OMNeT++/OMNEST -->
                        <include name="**/*.properties" />
                        <include name="**/*.java" />
                        <include name="**/*.htm" />
                        <include name="**/*.html" />
                        <include name="**/*.xml" />
                        <include name="META-INF/MANIFEST.MF" />
                     </replace>
                     <replace dir="." token="Academic Edition, not for commercial use" value="Commercial Edition">
                        <include name="**/*.xml" />
                     </replace>
                     <!-- in org.omnetpp.common -->
                     <replace dir="." token="IS_COMMERCIAL = false;" value="IS_COMMERCIAL = true;">
                        <include name="**/*.java" />
                     </replace>
                  </target>
                  </configuration>
                  <goals>
                  <goal>run</goal>
                  </goals>
               </execution>
            </executions>
            </plugin>

         </plugins>
      </build>
      </profile>
   </profiles>

   <modules>
      <module>features</module>
      <module>releng/org.omnetpp.ide.${what}.product</module>

      <module>org.omnetpp.cdt</module>
      <module>org.omnetpp.common</module>
      <module>org.omnetpp.common.core</module>
      <module>org.omnetpp.doc</module>
      <module>org.omnetpp.dsp</module>
      <module>org.omnetpp.eventlogtable</module>
      <module>org.omnetpp.figures</module>
      <module>org.omnetpp.ide.nativelibs</module>
      <module>org.omnetpp.ide.nativelibs.linux.x86_64</module>
      <module>org.omnetpp.ide.nativelibs.linux.aarch64</module>
      <module>org.omnetpp.ide.nativelibs.macosx</module>
      <module>org.omnetpp.ide.nativelibs.win32.x86_64</module>
      <module>org.omnetpp.inifile.editor</module>
      <module>org.omnetpp.launch</module>
      <module>org.omnetpp.main</module>
      <module>org.omnetpp.main.${what}</module>
      <module>org.omnetpp.msg.editor</module>
      <module>org.omnetpp.ned.core</module>
      <module>org.omnetpp.ned.editor</module>
      <module>org.omnetpp.ned.model</module>
      <module>org.omnetpp.neddoc</module>
      <module>org.omnetpp.scave</module>
      <module>org.omnetpp.scave.builder</module>
      <module>org.omnetpp.scave.model</module>
      <module>org.omnetpp.scave.pychart</module>
      <module>org.omnetpp.scave.templates</module>
      <module>org.omnetpp.sequencechart</module>
      <module>org.swtworkbench.xswt</module>
      <module>org.visigoths.freemarker</module>
      <module>org.visigoths.freemarker.ide</module>
   </modules>
</project>
